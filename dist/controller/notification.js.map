{"version":3,"sources":["../../src/controller/notification.js"],"names":["config","db","api","post","req","res","findOne","email","body","err","user","undefined","status","json","message","login","token","find","userId","_id","notification","chat","send","update","$set","saw","multi"],"mappings":"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","file":"notification.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport { Router } from 'express';\r\nimport Login from '../model/login';\r\nimport User from '../model/user';\r\nimport Notification from '../model/notification';\r\nimport bodyParser from 'body-parser';\r\nexport default({ config, db }) => {\r\n  let api = Router();\r\n\r\n//v1/notification/get\r\napi.post('/get', (req, res) => {\r\n    //check password or match password token\r\n      User.findOne({email:req.body.email},(err,user)=>{\r\n        if(user==undefined){\r\n         res.status(400).json({ message: 'User not found!' });\r\n     }else{\r\n Login.findOne({email:req.body.email},(err,login)=>{\r\n \r\n     if(!err){\r\n \r\n         if(login==undefined){ //user not found\r\n \r\n             res.status(400).json({ message: 'User not Logged In!' });\r\n         }else{\r\n \r\n             if(login.token==req.body.token ){  //token matching and only admin can add\r\n                     \r\n                   Notification.find({userId:user._id},(err,notification)=>{\r\n                    if(!err){\r\n                        if(chat===undefined){\r\n\r\n                            res.status(400).json({message:\"no notification found!\"});\r\n                        }else{\r\n\r\n                            res.status(200).json(notification);\r\n                        }\r\n\r\n                    }else{\r\n\r\n                        res.status(500).send(err);\r\n                    }\r\n\r\n                   }); \r\n \r\n \r\n             }else{\r\n                 res.status(400).json({ message: 'invalid token!' });\r\n \r\n             }\r\n       \r\n         }\r\n        \r\n     }else{\r\n \r\n             res.status(400).send(err);\r\n         }\r\n   \r\n });\r\n     }\r\n             });\r\n   });\r\n   //v1/notification/\r\napi.post('/saw', (req, res) => {\r\n    //check password or match password token\r\n      User.findOne({email:req.body.email},(err,user)=>{\r\n        if(user==undefined){\r\n         res.status(400).json({ message: 'User not found!' });\r\n     }else{\r\n Login.findOne({email:req.body.email},(err,login)=>{\r\n \r\n     if(!err){\r\n \r\n         if(login==undefined){ //user not found\r\n \r\n             res.status(400).json({ message: 'User not Logged In!' });\r\n         }else{\r\n \r\n             if(login.token==req.body.token ){  //token matching and only admin can add\r\n                     \r\n                   Notification.update({userId:user._id},{$set:{saw:1}},{multi: true},(err,notification)=>{\r\n                    if(!err){\r\n                        if(notification===undefined){\r\n\r\n                            res.status(400).json({message:\"no notification found!\"});\r\n                        }else{\r\n\r\n                            res.status(200).json({message:\"saw notifications!\"});\r\n                        }\r\n\r\n                    }else{\r\n\r\n                        res.status(500).send(err);\r\n                    }\r\n\r\n                   }); \r\n \r\n \r\n             }else{\r\n                 res.status(400).json({ message: 'invalid token!' });\r\n \r\n             }\r\n       \r\n         }\r\n        \r\n     }else{\r\n \r\n             res.status(400).send(err);\r\n         }\r\n   \r\n });\r\n     }\r\n             });\r\n   });\r\n  return api;\r\n}\r\n"]}