{"version":3,"sources":["../../src/controller/product.js"],"names":["config","db","api","post","req","res","findOne","email","body","err","user","undefined","status","json","message","login","token","newProduct","productName","productAge","productDescription","description","referenceLink","college","city","image1","image2","image3","image4","userId","_id","rentPerAmount","condition","rentTimeType","isSecurityAmount","userName","securityAmount","save","product","newNotification","type","refId","link","transporter","createTransport","service","auth","pass","templateString","readFileSync","mailOptions","from","to","subject","html","render","heading","name","fname","console","log","sendMail","info","send","put","params","id","equals","userType","lastEdit","Date","imageApproved","linkApproved","productApproved","facebookLink","facebooklink","youtubeLink","youtubelink","twitterLink","twitterlink","delete","remove","pageView","a","wishList","search","replace","productId","review","value","newReview","ratings","numberOfRatings","findById","ownerUser","reason","get","collegeId","sort","sortby","indexOf","pageNumber","isNaN","page","countQuery","callback","find","doc","length","retrieveQuery","skip","limit","exec","parallel","results","total_pages","Math","floor","products","prod","category","qry","JSON","parse","decodeURIComponent","query","RegExp","categoryName","subcategory","subcategoryName","onHold"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;kBACc,gBAAoB;AAAA,QAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,QAATC,EAAS,QAATA,EAAS;;AAChC,QAAIC,MAAM,sBAAV;;AAEA;AACAA,QAAIC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B;;AAEE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAED,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAzB,EAA+B;AAAG;;AAE1B,oCAAIC,aAAW,uBAAf;AACAA,2CAAWC,WAAX,GAAuBd,IAAII,IAAJ,CAASU,WAAhC;AACD;AACAD,2CAAWE,UAAX,GAAsBf,IAAII,IAAJ,CAASW,UAA/B;AACAF,2CAAWG,kBAAX,GAA8BhB,IAAII,IAAJ,CAASa,WAAvC;AACAJ,2CAAWK,aAAX,GAAyBlB,IAAII,IAAJ,CAASc,aAAlC;AACAL,2CAAWM,OAAX,GAAmBb,KAAKa,OAAxB;AACAN,2CAAWO,IAAX,GAAgBd,KAAKc,IAArB;AACAP,2CAAWQ,MAAX,GAAkBrB,IAAII,IAAJ,CAASiB,MAA3B;AACAR,2CAAWS,MAAX,GAAkBtB,IAAII,IAAJ,CAASkB,MAA3B;AACAT,2CAAWU,MAAX,GAAkBvB,IAAII,IAAJ,CAASmB,MAA3B;AACAV,2CAAWW,MAAX,GAAkBxB,IAAII,IAAJ,CAASoB,MAA3B;AACCX,2CAAWY,MAAX,GAAkBnB,KAAKoB,GAAvB,EACAb,WAAWc,aAAX,GAAyB3B,IAAII,IAAJ,CAASuB,aADlC,EAEAd,WAAWe,SAAX,GAAqB5B,IAAII,IAAJ,CAASwB,SAF9B,EAGAf,WAAWgB,YAAX,GAAwB7B,IAAII,IAAJ,CAASyB,YAHjC,EAIAhB,WAAWiB,gBAAX,GAA4B9B,IAAII,IAAJ,CAAS0B,gBAJrC,EAKAjB,WAAWkB,QAAX,GAAoB/B,IAAII,IAAJ,CAAS2B,QAL7B,EAMAlB,WAAWmB,cAAX,GAA0BhC,IAAII,IAAJ,CAAS4B,cANnC,EAOAnB,WAAWoB,IAAX,CAAgB,UAAC5B,GAAD,EAAK6B,OAAL,EAAe;;AAE3B,wCAAG,CAAC7B,GAAJ,EAAQ;AACJ,4CAAI8B,kBAAgB,4BAApB;AACAA,wDAAgBV,MAAhB,GAAuBnB,KAAKoB,GAA5B;AACAS,wDAAgBzB,OAAhB,GAAwB,iBAAxB;AACAyB,wDAAgBlB,WAAhB,GAA4B,iBAAeiB,QAAQpB,WAAvB,GAAmC,iEAA/D;AACAqB,wDAAgBC,IAAhB,GAAqB,CAArB;AACAD,wDAAgBE,KAAhB,GAAsB/B,KAAKoB,GAA3B;AACAS,wDAAgBG,IAAhB,GAAqB,UAArB;AACA;AACA,4CAAIC,cAAc,qBAAWC,eAAX,CAA2B;AAC3CC,qDAAS,OADkC;AAE3CC,kDAAM;AACNpC,sDAAM,wBADA,EAC0B;AAChCqC,sDAAM,YAFA,CAEa;AAFb;AAFqC,yCAA3B,CAAlB;AAOF,4CAAIC,iBAAiB,aAAGC,YAAH,CAAgB,qBAAhB,EAAuC,OAAvC,CAArB;AACA,4CAAIC,cAAc;AACdC,kDAAM,uBADQ,EACiB;AAC/BC,gDAAI1C,KAAKH,KAFK,EAEE;AAChB8C,qDAAS,eAHK,EAGY;AAC1BC,kDAAM,cAAIC,MAAJ,CAAWP,cAAX,EAA0B,EAACQ,SAAQ,kBAAT,EAA4BC,MAAK/C,KAAKgD,KAAtC,EAA4C5C,SAAQ,8CAApD,EAAmGI,aAAYd,IAAII,IAAJ,CAASU,WAAxH,EAA1B,EAA+J,UAACT,GAAD,EAAO;AAC5K,oDAAGA,GAAH,EAAO;AACHkD,4DAAQC,GAAR,CAAYnD,GAAZ;AACH;AACA,6CAJK;;AAJQ,yCAAlB;AAWAkC,oDAAYkB,QAAZ,CAAqBX,WAArB,EAAkC,UAAUzC,GAAV,EAAeqD,IAAf,EAAqB;AACnD,gDAAGrD,GAAH,EACAkD,QAAQC,GAAR,CAAYnD,GAAZ,EADA,KAIAkD,QAAQC,GAAR,CAAYE,IAAZ;AACH,yCAND;AAOA;;AAEEvB,wDAAgBF,IAAhB;AACIhC,4CAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqByB,OAArB;AAEP,qCAxCD,MAwCK;;AAEGjC,4CAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAQ,oBAAT,EAArB;AACP;AACJ,iCA9CD,CAPA;AAyDP,6BAvED,MAuEK;AACDT,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBArFD,MAqFK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBA5FD;AA6FK;AACQ,SAlGR;AAmGF,KAtGD;;AAwGA;;AAEAP,QAAI8D,GAAJ,CAAQ,aAAR,EAAuB,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACnC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAED,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAzB,EAA+B;AAAG;AAC/B,kDAAQV,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;AACN6C,oDAAQC,GAAR,CAAYlD,KAAKoB,GAAjB;AACA6B,oDAAQC,GAAR,CAAYtB,QAAQT,MAApB;AACK,gDAAGnB,KAAKoB,GAAL,CAASqC,MAAT,CAAgB7B,QAAQT,MAAxB,KAAmCd,MAAMqD,QAAN,GAAe,CAArD,EAAuD;AAAE;AACzD9B,wDAAQpB,WAAR,GAAoBd,IAAII,IAAJ,CAASU,WAA7B;AACAoB,wDAAQlB,kBAAR,GAA2BhB,IAAII,IAAJ,CAASa,WAApC;AACAiB,wDAAQhB,aAAR,GAAsBlB,IAAII,IAAJ,CAASc,aAA/B;AACAgB,wDAAQN,SAAR,GAAkB5B,IAAII,IAAJ,CAASwB,SAA3B;AACAM,wDAAQP,aAAR,GAAsB3B,IAAII,IAAJ,CAASuB,aAA/B;AACAO,wDAAQL,YAAR,GAAqB7B,IAAII,IAAJ,CAASyB,YAA9B;AACAK,wDAAQJ,gBAAR,GAAyB9B,IAAII,IAAJ,CAAS0B,gBAAlC;AACAI,wDAAQF,cAAR,GAAuBhC,IAAII,IAAJ,CAAS4B,cAAhC;AACAE,wDAAQnB,UAAR,GAAmBf,IAAII,IAAJ,CAASW,UAA5B;AACAmB,wDAAQ+B,QAAR,GAAiBC,MAAjB;AACAhC,wDAAQb,MAAR,GAAerB,IAAII,IAAJ,CAASiB,MAAxB;AACAa,wDAAQZ,MAAR,GAAetB,IAAII,IAAJ,CAASkB,MAAxB;AACAY,wDAAQX,MAAR,GAAevB,IAAII,IAAJ,CAASmB,MAAxB;AACAW,wDAAQV,MAAR,GAAexB,IAAII,IAAJ,CAASoB,MAAxB;AACAU,wDAAQiC,aAAR,GAAsB,CAAtB;AACAjC,wDAAQkC,YAAR,GAAqB,CAArB;AACAlC,wDAAQmC,eAAR,GAAwB,CAAxB;AACAnC,wDAAQoC,YAAR,GAAqBtE,IAAII,IAAJ,CAASmE,YAA9B;AACArC,wDAAQsC,WAAR,GAAoBxE,IAAII,IAAJ,CAASqE,WAA7B;AACAvC,wDAAQwC,WAAR,GAAoB1E,IAAII,IAAJ,CAASuE,WAA7B;AACAzC,wDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAK6B,OAAL,EAAe;;AAExB,wDAAG,CAAC7B,GAAJ,EAAQ;;AAEJJ,4DAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBzB,OAArB;AACH,qDAHD,MAGK;;AAEDjC,4DAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,uBAAT,EAArB;AACH;AAEJ,iDAVD;AAYH,6CAjCG,MAiCC;;AAECT,oDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,kCAAT,EAArB;AACA;AACD;AAGZ,qCA/CD,MA+CK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAxDD;AA6DF,6BA9DD,MA8DK;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBA5ED,MA4EK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBAnFD;AAoFK;AACQ,SAzFR;AA0FF,KA5FF;AA6FD;AACAP,QAAI8E,MAAJ,CAAW,2BAAX,EAAwC,UAAC5E,GAAD,EAAMC,GAAN,EAAc;AACnD;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAI6D,MAAJ,CAAW1D,KAAlB,EAAb,EAAsC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAChD,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAI6D,MAAJ,CAAW1D,KAAlB,EAAd,EAAuC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAEhD,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAED,gCAAGC,MAAMC,KAAN,KAAcZ,IAAI6D,MAAJ,CAAWjD,KAA5B,EAAkC;AAAG;AAClC,kDAAQV,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAV,IAAuB2B,YAAU,IAApC,EAAyC;AACrCqB,oDAAQC,GAAR,CAAY,mBAAZ;AACAvD,gDAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAED,gDAAGJ,KAAKoB,GAAL,CAASqC,MAAT,CAAgB7B,QAAQT,MAAxB,KAAmCd,MAAMqD,QAAN,GAAe,CAArD,EAAuD;;AAEvD9B,wDAAQ2C,MAAR,CAAe,UAACxE,GAAD,EAAO;;AAElB,wDAAG,CAACA,GAAJ,EAAQ;;AAEJJ,4DAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,gCAAT,EAArB;AACH,qDAHD,MAGK;;AAEDT,4DAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,yBAAT,EAArB;AACH;AAEJ,iDAVD;AAYH,6CAdG,MAcC;;AAECT,oDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,kCAAT,EAArB;AACA;AACD;AAGZ,qCA3BD,MA2BK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCApCD;AAyCF,6BA1CD,MA0CK;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBAxDD,MAwDK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBA/DD;AAgEK;AACQ,SArER;AAsEF,KAxEH;;AA0EG;AACHP,QAAI8D,GAAJ,CAAQ,cAAR,EAAwB,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACnC;;AAEY,0BAAQC,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,gBAAG,CAAC7B,GAAJ,EAAQ;AACA,oBAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,wBAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,iBAHD,MAGK;;AAGLwB,4BAAQ4C,QAAR,GAAiB5C,QAAQ4C,QAAR,GAAiB,CAAlC;AACI5C,4BAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,4BAAG,CAACA,GAAJ,EAAQ;;AAEJJ,gCAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,qBAAT,EAArB;AACH,yBAHD,MAGK;;AAEDT,gCAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,qBAVD;AAaC;AAGZ,aAxBD,MAwBK;;AAEDT,oBAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,SAjCD;AAkCZ,KArCH;AAsCE;AACAP,QAAI8D,GAAJ,CAAQ,kBAAR,EAA4B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACzC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAED,gCAAGC,MAAMC,KAAN,KAAcZ,IAAII,IAAJ,CAASQ,KAA1B,EAAgC;AAAG;AAChC,kDAAQV,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;AACD,gDAAIqE,IAAE,CAAC,CAAP;AACA,gDAAG7C,QAAQ8C,QAAR,KAAmBzE,SAAtB,EAAgC;AAC5B2B,wDAAQ8C,QAAR,GAAiB1E,KAAKH,KAAL,GAAW,GAA5B;AACH,6CAFD,MAEK;AACL4E,oDAAE7C,QAAQ8C,QAAR,CAAiBC,MAAjB,CAAwB3E,KAAKH,KAAL,GAAW,GAAnC,CAAF;AACE;AACD,gDAAG4E,IAAE,CAAL,EAAO;AACJ7C,wDAAQ8C,QAAR,GAAiB9C,QAAQ8C,QAAR,GAAiB1E,KAAKH,KAAtB,GAA4B,GAA7C;AACJ+B,wDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,wDAAG,CAACA,GAAJ,EAAQ;;AAEJJ,4DAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,oBAAT,EAArB;AACH,qDAHD,MAGK;;AAEDT,4DAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,iDAVD;AAYH,6CAdI,MAcA;;AAEDT,oDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,oBAAT,EAArB;AACH;AACI;AAGZ,qCAhCD,MAgCK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAzCD;AA8CF,6BA/CD,MA+CK;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBA7DD,MA6DK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBApED;AAqEK;AACQ,SA1ER;AA2EF,KA7ED;AA8EA;AACAP,QAAI8D,GAAJ,CAAQ,qBAAR,EAA+B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AAC5C;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAED,gCAAGC,MAAMC,KAAN,KAAcZ,IAAII,IAAJ,CAASQ,KAA1B,EAAgC;AAAG;AAChC,kDAAQV,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;AACD,gDAAIqE,IAAE,CAAC,CAAP;AACA,gDAAG7C,QAAQ8C,QAAR,KAAmBzE,SAAtB,EAAgC;AAC5BN,oDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,oBAAT,EAArB;AACH,6CAFD,MAEK;AACLqE,oDAAE7C,QAAQ8C,QAAR,CAAiBC,MAAjB,CAAwB3E,KAAKH,KAAL,GAAW,GAAnC,CAAF;AACE;AACD,gDAAG4E,KAAG,CAAN,EAAQ;AACL7C,wDAAQ8C,QAAR,GAAiB9C,QAAQ8C,QAAR,CAAiBE,OAAjB,CAAyB5E,KAAKH,KAAL,GAAW,GAApC,EAAwC,EAAxC,CAAjB;AACJ+B,wDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,wDAAG,CAACA,GAAJ,EAAQ;;AAEJJ,4DAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,qDAHD,MAGK;;AAEDT,4DAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,iDAVD;AAYH,6CAdI,MAcA;;AAEDT,oDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH;AACI;AAGZ,qCAhCD,MAgCK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAzCD;AA8CF,6BA/CD,MA+CK;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBA7DD,MA6DK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBApED;AAqEK;AACQ,SA1ER;AA2EF,KA7ED;;AA+EC;AACAP,QAAI8D,GAAJ,CAAQ,gBAAR,EAA0B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACpC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAED,gCAAGC,MAAMC,KAAN,KAAcZ,IAAII,IAAJ,CAASQ,KAA1B,EAAgC;AAAG;AAChC,kDAAQV,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAEG,6DAAOR,OAAP,CAAe,EAACuB,QAAOnB,KAAKoB,GAAb,EAAiByD,WAAUnF,IAAI6D,MAAJ,CAAWC,EAAtC,EAAf,EAAyD,UAACzD,GAAD,EAAK+E,MAAL,EAAc;;AAEnE,oDAAG,CAAC/E,GAAJ,EAAQ;;AAEJ,wDAAG+E,WAAS,IAAZ,EAAiB;AACb,4DAAGpF,IAAII,IAAJ,CAASiF,KAAT,GAAe,CAAf,IAAoBrF,IAAII,IAAJ,CAASiF,KAAT,GAAe,EAAtC,EAAyC;;AAErCpF,gEAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,iDAAT,EAArB;AACH,yDAHD,MAGK;AACL,gEAAI4E,YAAU,sBAAd;AACAA,sEAAU7D,MAAV,GAAiBnB,KAAKoB,GAAtB;AACA4D,sEAAUH,SAAV,GAAoBnF,IAAI6D,MAAJ,CAAWC,EAA/B;AACAwB,sEAAUD,KAAV,GAAgBrF,IAAII,IAAJ,CAASiF,KAAzB;AACAC,sEAAUrE,WAAV,GAAsBjB,IAAII,IAAJ,CAASa,WAA/B;AACAiB,oEAAQqD,OAAR,GAAgB,CAAErD,QAAQsD,eAAR,GAAwBtD,QAAQqD,OAAjC,GAA0CvF,IAAII,IAAJ,CAASiF,KAApD,KAA4DnD,QAAQsD,eAAR,GAAwB,CAApF,CAAhB;AACAtD,oEAAQsD,eAAR,GAAwBtD,QAAQsD,eAAR,GAAwB,CAAhD;AACAF,sEAAUrD,IAAV,CAAe,UAAC5B,GAAD,EAAO;;AAElB,oEAAG,CAACA,GAAJ,EAAQ;;AAGJ6B,4EAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,4EAAGA,GAAH,EAAO;;AAEJJ,gFAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACF;AACAJ,4EAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACJ,qEAPD;AAQH,iEAXD,MAWK;;AAEDT,wEAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AACJ,6DAjBD;AAmBH;AACJ,qDAhCG,MAgCC;;AAEC,4DAAGL,IAAII,IAAJ,CAASiF,KAAT,GAAe,CAAf,IAAoBrF,IAAII,IAAJ,CAASiF,KAAT,GAAe,EAAtC,EAAyC;;AAExCpF,gEAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,iDAAT,EAArB;AACE,yDAHH,MAGO;AACP,gEAAGwB,QAAQsD,eAAR,KAA0B,CAA7B,EAA+B;AAC3BtD,wEAAQqD,OAAR,GAAgBvF,IAAII,IAAJ,CAASiF,KAAzB;AACH,6DAFD,MAEK;AACPnD,wEAAQqD,OAAR,GAAgB,CAAErD,QAAQsD,eAAR,GAAwBtD,QAAQqD,OAAjC,GAA0CH,OAAOC,KAAlD,KAA0DnD,QAAQsD,eAAR,GAAwB,CAAlF,CAAhB;AACAtD,wEAAQqD,OAAR,GAAgB,CAAE,CAACrD,QAAQsD,eAAR,GAAwB,CAAzB,IAA4BtD,QAAQqD,OAArC,GAA8CvF,IAAII,IAAJ,CAASiF,KAAxD,IAA+DnD,QAAQsD,eAAvF;AACH;AACGJ,mEAAOC,KAAP,GAAarF,IAAII,IAAJ,CAASiF,KAAtB;AACAD,mEAAOnE,WAAP,GAAmBjB,IAAII,IAAJ,CAASa,WAA5B;AACAmE,mEAAOnD,IAAP,CAAY,UAAC5B,GAAD,EAAO;;AAEf,oEAAG,CAACA,GAAJ,EAAQ;;AAGJ6B,4EAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEjB,4EAAGA,GAAH,EAAO;;AAECJ,gFAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACF;AACAJ,4EAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACR,qEAPD;AAQH,iEAXD,MAWK;;AAEDT,wEAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AACJ,6DAjBD;AAkBH;AAEL;AACH,iDArEO,MAqEH;;AAEGJ,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AACA,6CA3ED;AA6EH;AAGZ,qCAtFD,MAsFK;;AAEDJ,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCA/FD;AAoGF,6BArGD,MAqGK;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBAnHD,MAmHK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBA1HD;AA2HK;AACQ,SAhIR;AAiIF,KAnIJ;;AAqIG;AACA;AACAP,QAAI8D,GAAJ,CAAQ,qBAAR,EAA+B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AAC5C;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAGLwB,oDAAQmC,eAAR,GAAwB,CAAxB;AACInC,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;AACJ,wDAAI8B,kBAAgB,4BAApB;AACAA,oEAAgBV,MAAhB,GAAuBS,QAAQT,MAA/B;AACAU,oEAAgBzB,OAAhB,GAAwB,mBAAxB;AACAyB,oEAAgBlB,WAAhB,GAA4B,kBAAgBiB,QAAQpB,WAAxB,GAAoC,oBAAhE;AACAqB,oEAAgBC,IAAhB,GAAqB,CAArB;AACAD,oEAAgBE,KAAhB,GAAsBH,QAAQR,GAA9B;AACAS,oEAAgBG,IAAhB,GAAqB,UAArB;AACA,mEAAKmD,QAAL,CAAevD,QAAQT,MAAvB,EAA+B,UAACpB,GAAD,EAAKqF,SAAL,EAAiB;;AAEI,4DAAG,CAACrF,GAAJ,EAAQ;AAC5D;AAC1C,gEAAIkC,cAAc,qBAAWC,eAAX,CAA2B;AAC3CC,yEAAS,OADkC;AAE3CC,sEAAM;AACNpC,0EAAM,wBADA,EAC0B;AAChCqC,0EAAM,YAFA,CAEa;AAFb;AAFqC,6DAA3B,CAAlB;AAOF,gEAAIC,iBAAiB,aAAGC,YAAH,CAAgB,qBAAhB,EAAuC,OAAvC,CAArB;AACA,gEAAIC,cAAc;AACdC,sEAAM,uBADQ,EACiB;AAC/BC,oEAAI0C,UAAUvF,KAFA,EAEO;AACrB8C,yEAAS,WAHK,EAGQ;AACtBC,sEAAM,cAAIC,MAAJ,CAAWP,cAAX,EAA0B,EAACQ,SAAQ,UAAT,EAAoBC,MAAKqC,UAAUpC,KAAnC,EAAyC5C,SAAQ,2BAAjD,EAA6EI,aAAYoB,QAAQpB,WAAjG,EAA1B,EAAwI,UAACT,GAAD,EAAO;AACrJ,wEAAGA,GAAH,EAAO;AACHkD,gFAAQC,GAAR,CAAYnD,GAAZ;AACH;AACA,iEAJK;;AAJQ,6DAAlB;AAWAkC,wEAAYkB,QAAZ,CAAqBX,WAArB,EAAkC,UAAUzC,GAAV,EAAeqD,IAAf,EAAqB;AACnD,oEAAGrD,GAAH,EACAkD,QAAQC,GAAR,CAAYnD,GAAZ,EADA,KAIAkD,QAAQC,GAAR,CAAYE,IAAZ;AACH,6DAND;AAOA;AACiG;AAAC,qDA/BtD;AAgCAvB,oEAAgBF,IAAhB;AACAhC,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,mBAAT,EAArB;AACH,iDA1CD,MA0CK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAjDD;AAoDC;AAGZ,qCA/DD,MA+DK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAxED;AA6EF,6BA9EF,MA8EM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBA5FD,MA4FK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBAnGD;AAoGK;AACQ,SAzGR;AA0GF,KA5GD;AA6GC;AACAP,QAAI8D,GAAJ,CAAQ,kBAAR,EAA4B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACtC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAGLwB,oDAAQkC,YAAR,GAAqB,CAArB;AACIlC,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;;AAEJJ,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,iBAAT,EAArB;AACH,iDAHD,MAGK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAVD;AAaC;AAGZ,qCAxBD,MAwBK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAjCD;AAsCF,6BAvCF,MAuCM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBArDD,MAqDK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBA5DD;AA6DK;AACQ,SAlER;AAmEF,KArEJ;AAsEG;AACHP,QAAI8D,GAAJ,CAAQ,oBAAR,EAA8B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACxC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAGLwB,oDAAQiC,aAAR,GAAsB,CAAtB;AACIjC,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;;AAEJJ,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,iBAAT,EAArB;AACH,iDAHD,MAGK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAVD;AAaC;AAGZ,qCAxBD,MAwBK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAjCD;AAsCF,6BAvCF,MAuCM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBArDD,MAqDK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBA5DD;AA6DK;AACQ,SAlER;AAmEF,KArEJ;AAsEI;AACLP,QAAI8D,GAAJ,CAAQ,oBAAR,EAA8B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AAC3C;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAGLwB,oDAAQmC,eAAR,GAAwB,CAAxB;AACInC,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;AACA,wDAAI8B,kBAAgB,4BAApB;AACAA,oEAAgBV,MAAhB,GAAuBS,QAAQT,MAA/B;AACAU,oEAAgBzB,OAAhB,GAAwB,mBAAxB;AACAyB,oEAAgBlB,WAAhB,GAA4BjB,IAAII,IAAJ,CAASa,WAArC;AACAkB,oEAAgBC,IAAhB,GAAqB,CAArB;AACAD,oEAAgBE,KAAhB,GAAsBH,QAAQR,GAA9B;AACAS,oEAAgBG,IAAhB,GAAqB,UAArB;AACA,mEAAKmD,QAAL,CAAevD,QAAQT,MAAvB,EAA+B,UAACpB,GAAD,EAAKqF,SAAL,EAAiB;;AAEI,4DAAG,CAACrF,GAAJ,EAAQ;AAC5D;AAC1C,gEAAIkC,cAAc,qBAAWC,eAAX,CAA2B;AAC3CC,yEAAS,OADkC;AAE3CC,sEAAM;AACNpC,0EAAM,wBADA,EAC0B;AAChCqC,0EAAM,YAFA,CAEa;AAFb;AAFqC,6DAA3B,CAAlB;AAOF,gEAAIC,iBAAiB,aAAGC,YAAH,CAAgB,oBAAhB,EAAsC,OAAtC,CAArB;AACA,gEAAIC,cAAc;AACdC,sEAAM,uBADQ,EACiB;AAC/BC,oEAAI0C,UAAUvF,KAFA,EAEO;AACrB8C,yEAAS,WAHK,EAGQ;AACtBC,sEAAM,cAAIC,MAAJ,CAAWP,cAAX,EAA0B,EAACQ,SAAQ,UAAT,EAAoBC,MAAKqC,UAAUpC,KAAnC,EAAyC5C,SAAQ,2BAAjD,EAA6EI,aAAYoB,QAAQpB,WAAjG,EAA6G6E,QAAO3F,IAAII,IAAJ,CAASa,WAA7H,EAA1B,EAAoK,UAACZ,GAAD,EAAO;AACjL,wEAAGA,GAAH,EAAO;AACHkD,gFAAQC,GAAR,CAAYnD,GAAZ;AACH;AACA,iEAJK;;AAJQ,6DAAlB;AAWAkC,wEAAYkB,QAAZ,CAAqBX,WAArB,EAAkC,UAAUzC,GAAV,EAAeqD,IAAf,EAAqB;AACnD,oEAAGrD,GAAH,EACAkD,QAAQC,GAAR,CAAYnD,GAAZ,EADA,KAIAkD,QAAQC,GAAR,CAAYE,IAAZ;AACH,6DAND;AAOA;AACiG;AAAC,qDA/BtD;AAgCAvB,oEAAgBF,IAAhB;AACJhC,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,mBAAT,EAArB;AACH,iDA1CD,MA0CK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAjDD;AAoDC;AAGZ,qCA/DD,MA+DK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAxED;AA6EF,6BA9EF,MA8EM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBA5FD,MA4FK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBAnGD;AAoGK;AACQ,SAzGR;AA0GF,KA5GD;AA6GC;AACAP,QAAI8D,GAAJ,CAAQ,iBAAR,EAA2B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACrC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAGLwB,oDAAQkC,YAAR,GAAqB,CAArB;AACIlC,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;AACJ,wDAAI8B,kBAAgB,4BAApB;AACAA,oEAAgBV,MAAhB,GAAuBS,QAAQT,MAA/B;AACAU,oEAAgBzB,OAAhB,GAAwB,gBAAxB;AACAyB,oEAAgBlB,WAAhB,GAA4BjB,IAAII,IAAJ,CAASa,WAArC;AACAkB,oEAAgBC,IAAhB,GAAqB,CAArB;AACAD,oEAAgBE,KAAhB,GAAsBH,QAAQR,GAA9B;AACAS,oEAAgBG,IAAhB,GAAqB,UAArB;AACA,mEAAKmD,QAAL,CAAevD,QAAQT,MAAvB,EAA+B,UAACpB,GAAD,EAAKqF,SAAL,EAAiB;;AAEI,4DAAG,CAACrF,GAAJ,EAAQ;AAC5D;AAC1C,gEAAIkC,cAAc,qBAAWC,eAAX,CAA2B;AAC3CC,yEAAS,OADkC;AAE3CC,sEAAM;AACNpC,0EAAM,wBADA,EAC0B;AAChCqC,0EAAM,YAFA,CAEa;AAFb;AAFqC,6DAA3B,CAAlB;AAOF,gEAAIC,iBAAiB,aAAGC,YAAH,CAAgB,oBAAhB,EAAsC,OAAtC,CAArB;AACA,gEAAIC,cAAc;AACdC,sEAAM,uBADQ,EACiB;AAC/BC,oEAAI0C,UAAUvF,KAFA,EAEO;AACrB8C,yEAAS,WAHK,EAGQ;AACtBC,sEAAM,cAAIC,MAAJ,CAAWP,cAAX,EAA0B,EAACQ,SAAQ,UAAT,EAAoBC,MAAKqC,UAAUpC,KAAnC,EAAyC5C,SAAQ,wBAAjD,EAA0EI,aAAYoB,QAAQpB,WAA9F,EAA0G6E,QAAO3F,IAAII,IAAJ,CAASa,WAA1H,EAA1B,EAAiK,UAACZ,GAAD,EAAO;AAC9K,wEAAGA,GAAH,EAAO;AACHkD,gFAAQC,GAAR,CAAYnD,GAAZ;AACH;AACA,iEAJK;;AAJQ,6DAAlB;AAWAkC,wEAAYkB,QAAZ,CAAqBX,WAArB,EAAkC,UAAUzC,GAAV,EAAeqD,IAAf,EAAqB;AACnD,oEAAGrD,GAAH,EACAkD,QAAQC,GAAR,CAAYnD,GAAZ,EADA,KAIAkD,QAAQC,GAAR,CAAYE,IAAZ;AACH,6DAND;AAOA;AACiG;AAAC,qDA/BtD;AAgCAvB,oEAAgBF,IAAhB;AACAhC,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,iBAAT,EAArB;AACH,iDA1CD,MA0CK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAjDD;AAoDC;AAGZ,qCA/DD,MA+DK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAxED;AA6EF,6BA9EF,MA8EM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBA5FD,MA4FK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBAnGD;AAoGK;AACQ,SAzGR;AA0GF,KA5GJ;AA6GG;AACHP,QAAI8D,GAAJ,CAAQ,mBAAR,EAA6B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACvC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAGLwB,oDAAQiC,aAAR,GAAsB,CAAtB;AACIjC,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;AACJ,wDAAI8B,kBAAgB,4BAApB;AACAA,oEAAgBV,MAAhB,GAAuBS,QAAQT,MAA/B;AACAU,oEAAgBzB,OAAhB,GAAwB,kBAAxB;AACAyB,oEAAgBlB,WAAhB,GAA4BjB,IAAII,IAAJ,CAASa,WAArC;AACAkB,oEAAgBC,IAAhB,GAAqB,CAArB;AACAD,oEAAgBE,KAAhB,GAAsBH,QAAQR,GAA9B;AACAS,oEAAgBG,IAAhB,GAAqB,UAArB;AACA,mEAAKmD,QAAL,CAAevD,QAAQT,MAAvB,EAA+B,UAACpB,GAAD,EAAKqF,SAAL,EAAiB;;AAEI,4DAAG,CAACrF,GAAJ,EAAQ;AAC5D;AAC1C,gEAAIkC,cAAc,qBAAWC,eAAX,CAA2B;AAC3CC,yEAAS,OADkC;AAE3CC,sEAAM;AACNpC,0EAAM,wBADA,EAC0B;AAChCqC,0EAAM,YAFA,CAEa;AAFb;AAFqC,6DAA3B,CAAlB;AAOF,gEAAIC,iBAAiB,aAAGC,YAAH,CAAgB,oBAAhB,EAAsC,OAAtC,CAArB;AACA,gEAAIC,cAAc;AACdC,sEAAM,uBADQ,EACiB;AAC/BC,oEAAI0C,UAAUvF,KAFA,EAEO;AACrB8C,yEAAS,WAHK,EAGQ;AACtBC,sEAAM,cAAIC,MAAJ,CAAWP,cAAX,EAA0B,EAACQ,SAAQ,UAAT,EAAoBC,MAAKqC,UAAUpC,KAAnC,EAAyC5C,SAAQ,0BAAjD,EAA4EI,aAAYoB,QAAQpB,WAAhG,EAA4G6E,QAAO3F,IAAII,IAAJ,CAASa,WAA5H,EAA1B,EAAmK,UAACZ,GAAD,EAAO;AAChL,wEAAGA,GAAH,EAAO;AACHkD,gFAAQC,GAAR,CAAYnD,GAAZ;AACH;AACA,iEAJK;;AAJQ,6DAAlB;AAWAkC,wEAAYkB,QAAZ,CAAqBX,WAArB,EAAkC,UAAUzC,GAAV,EAAeqD,IAAf,EAAqB;AACnD,oEAAGrD,GAAH,EACAkD,QAAQC,GAAR,CAAYnD,GAAZ,EADA,KAIAkD,QAAQC,GAAR,CAAYE,IAAZ;AACH,6DAND;AAOA;AACiG;AAAC,qDA/BtD;AAgCAvB,oEAAgBF,IAAhB;AACAhC,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,eAAT,EAArB;AACH,iDA1CD,MA0CK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAjDD;AAoDC;AAGZ,qCA/DD,MA+DK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCAxED;AA6EF,6BA9EF,MA8EM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBA5FD,MA4FK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBAnGD;AAoGK;AACQ,SAzGR;AA0GF,KA5GJ;AA6GG;AACAP,QAAI8F,GAAJ,CAAQ,oDAAR,EAA8D,UAAC5F,GAAD,EAAMC,GAAN,EAAc;AAC3E;AACE,wBAAMC,OAAN,CAAc,EAACU,OAAMZ,IAAI6D,MAAJ,CAAWjD,KAAlB,EAAd,EAAuC,UAACP,GAAD,EAAKC,IAAL,EAAY;AACjD,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACD;AACD,kCAAQR,OAAR,CAAgB,EAACC,OAAMH,IAAI6D,MAAJ,CAAWgC,SAAlB,EAAhB,EAA6C,UAACxF,GAAD,EAAKC,IAAL,EAAY;AACrD;AACA,wBAAIwF,OAAK,CAAC,MAAD,EAAQ,QAAR,CAAT;AACA,wBAAIC,SAAO,MAAX;AACA,wBAAGD,KAAKE,OAAL,CAAahG,IAAI6D,MAAJ,CAAWkC,MAAxB,IAAkC,CAAC,CAAtC,EAAwC;;AAEpCA,iCAAO/F,IAAI6D,MAAJ,CAAWkC,MAAlB;AACH;AACD;AACA,wBAAIE,aAAW,CAAf;;AAEA,wBAAG,CAACC,MAAMlG,IAAI6D,MAAJ,CAAWsC,IAAjB,CAAJ,EAA2B;AACxBF,qCAAWjG,IAAI6D,MAAJ,CAAWsC,IAAtB;AACD;AACD;AACA5C,4BAAQC,GAAR,CAAY,eAAZ;AACA,wBAAI4C,aAAa,SAAbA,UAAa,CAASC,QAAT,EAAkB;AAChC,0CAAQC,IAAR,CAAa,EAACnF,SAAQnB,IAAI6D,MAAJ,CAAWgC,SAApB,EAAb,EAA6C,UAASxF,GAAT,EAAckG,GAAd,EAAkB;AACzD,gCAAGlG,GAAH,EAAO;AAAEgG,yCAAShG,GAAT,EAAc,IAAd;AAAqB,6BAA9B,MACI;AACAgG,yCAAS,IAAT,EAAeE,IAAIC,MAAnB;AACF;AACP,yBALD;AAME,qBAPL;;AASF,wBAAIC,gBAAgB,SAAhBA,aAAgB,CAASJ,QAAT,EAAkB;AAClC9C,gCAAQC,GAAR,CAAY,CAACyC,aAAW,CAAZ,IAAe,EAA3B;AACA,0CAAQK,IAAR,CAAa,EAACnF,SAAQnB,IAAI6D,MAAJ,CAAWgC,SAApB,EAAb,EAA6Ca,IAA7C,CAAkD,CAACT,aAAW,CAAZ,IAAe,EAAjE,EAAqEH,IAArE,CAA0E,EAACC,QAAQ,CAAC,CAAV,EAA1E,EAAwFY,KAAxF,CAA8F,EAA9F,EAAkGC,IAAlG,CAAuG,UAASvG,GAAT,EAAckG,GAAd,EAAkB;AACxH,gCAAGlG,GAAH,EAAO;AAAEgG,yCAAShG,GAAT,EAAc,IAAd;AAAqB,6BAA9B,MACI;AACAgG,yCAAS,IAAT,EAAeE,GAAf;AACF;AACP,yBALI;AAOJ,qBATA;;AAWHhD,4BAAQC,GAAR,CAAYiD,aAAZ;AACG,oCAAMI,QAAN,CAAe,CAACT,UAAD,EAAaK,aAAb,CAAf,EAA4C,UAASpG,GAAT,EAAcyG,OAAd,EAAsB;AAC7D;AACA;AACA;AACA;AACA;AACD,4BAAGzG,GAAH,EAAO;AACP;AACCJ,gCAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACA,yBAHD,MAGK;AACJJ,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACsG,aAAYC,KAAKC,KAAL,CAAWH,QAAQ,CAAR,IAAW,EAAX,GAAc,CAAzB,CAAb,EAA2CX,MAAMF,UAAjD,EAA6DiB,UAAUJ,QAAQ,CAAR,CAAvE,EAArB;AACA;AACJ,qBAZD;AAaF,iBAlDD;AAmDF;AACQ,SAzDR;AA0DF,KA5DD;;AA8DA;AACAhH,QAAI8F,GAAJ,CAAQ,oBAAR,EAA8B,UAAC5F,GAAD,EAAMC,GAAN,EAAc;;AAEvC,0BAAQwF,QAAR,CAAiB,EAAC/D,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAjB,EAAqC,UAACzD,GAAD,EAAK8G,IAAL,EAAY;AAC7C,gBAAG,CAAC9G,GAAJ,EAAQ;AACJJ,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACyB,SAAQiF,IAAT,EAArB;AACH,aAFD,MAEK;AACDlH,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAQ,mBAAT,EAArB;AACH;AAEN,SAPC;AAQJ,KAVD;AAYA;AACAZ,QAAI8F,GAAJ,CAAQ,oDAAR,EAA8D,UAAC5F,GAAD,EAAMC,GAAN,EAAc;AAC3E;AACE,wBAAMC,OAAN,CAAc,EAACU,OAAMZ,IAAI6D,MAAJ,CAAWjD,KAAlB,EAAd,EAAuC,UAACP,GAAD,EAAKC,IAAL,EAAY;AACjD,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACD;AACD,mCAASR,OAAT,CAAiB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWuD,QAAhB,EAAjB,EAA2C,UAAC/G,GAAD,EAAKC,IAAL,EAAY;AACnD;AACA,wBAAIwF,OAAK,CAAC,MAAD,EAAQ,QAAR,CAAT;AACA,wBAAIC,SAAO,MAAX;AACA,wBAAGD,KAAKE,OAAL,CAAahG,IAAI6D,MAAJ,CAAWkC,MAAxB,IAAkC,CAAC,CAAtC,EAAwC;;AAEpCA,iCAAO/F,IAAI6D,MAAJ,CAAWkC,MAAlB;AACH;AACD;AACA,wBAAIE,aAAW,CAAf;;AAEA,wBAAG,CAACC,MAAMlG,IAAI6D,MAAJ,CAAWsC,IAAjB,CAAJ,EAA2B;AACxBF,qCAAWjG,IAAI6D,MAAJ,CAAWsC,IAAtB;AACD;AACD;AACA5C,4BAAQC,GAAR,CAAY,eAAZ;AACA,wBAAI4C,aAAa,SAAbA,UAAa,CAASC,QAAT,EAAkB;AAChC,0CAAQC,IAAR,CAAa,EAACc,UAASpH,IAAI6D,MAAJ,CAAWuD,QAArB,EAAb,EAA6C,UAAS/G,GAAT,EAAckG,GAAd,EAAkB;AACzD,gCAAGlG,GAAH,EAAO;AAAEgG,yCAAShG,GAAT,EAAc,IAAd;AAAqB,6BAA9B,MACI;AACAgG,yCAAS,IAAT,EAAeE,IAAIC,MAAnB;AACF;AACP,yBALD;AAME,qBAPL;;AASF,wBAAIC,gBAAgB,SAAhBA,aAAgB,CAASJ,QAAT,EAAkB;AAClC9C,gCAAQC,GAAR,CAAY,CAACyC,aAAW,CAAZ,IAAe,EAA3B;AACA,0CAAQK,IAAR,CAAa,EAACc,UAASpH,IAAI6D,MAAJ,CAAWuD,QAArB,EAAb,EAA6CV,IAA7C,CAAkD,CAACT,aAAW,CAAZ,IAAe,EAAjE,EAAqEH,IAArE,CAA0E,EAACC,QAAQ,CAAC,CAAV,EAA1E,EAAwFY,KAAxF,CAA8F,EAA9F,EAAkGC,IAAlG,CAAuG,UAASvG,GAAT,EAAckG,GAAd,EAAkB;AACxH,gCAAGlG,GAAH,EAAO;AAAEgG,yCAAShG,GAAT,EAAc,IAAd;AAAqB,6BAA9B,MACI;AACAgG,yCAAS,IAAT,EAAeE,GAAf;AACF;AACP,yBALI;AAOJ,qBATA;;AAWHhD,4BAAQC,GAAR,CAAYiD,aAAZ;AACG,oCAAMI,QAAN,CAAe,CAACT,UAAD,EAAaK,aAAb,CAAf,EAA4C,UAASpG,GAAT,EAAcyG,OAAd,EAAsB;AAC9D,4BAAGzG,GAAH,EAAO;AACP;AACCJ,gCAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACA,yBAHD,MAGK;AACJJ,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACsG,aAAYC,KAAKC,KAAL,CAAWH,QAAQ,CAAR,IAAW,EAAX,GAAc,CAAzB,CAAb,EAA2CX,MAAMF,UAAjD,EAA6DiB,UAAUJ,QAAQ,CAAR,CAAvE,EAArB;AACA;AACJ,qBAPD;AAQF,iBA7CD;AA8CF;AACQ,SApDR;AAqDF,KAvDD;AAwDP;AACAhH,QAAI8F,GAAJ,CAAQ,sCAAR,EAAgD,UAAC5F,GAAD,EAAMC,GAAN,EAAc;AAC1D;AACE,wBAAMC,OAAN,CAAc,EAACU,OAAMZ,IAAI6D,MAAJ,CAAWjD,KAAlB,EAAd,EAAuC,UAACP,GAAD,EAAKC,IAAL,EAAY;AACjD,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACE,oBAAIoF,OAAK,CAAC,UAAD,EAAY,QAAZ,CAAT;AACA,oBAAIC,SAAO,UAAX;AACA,oBAAGD,KAAKE,OAAL,CAAahG,IAAI6D,MAAJ,CAAWkC,MAAxB,IAAkC,CAAC,CAAtC,EAAwC;;AAEpCA,6BAAO/F,IAAI6D,MAAJ,CAAWkC,MAAlB;AACH;AACD;AACA,oBAAIE,aAAW,CAAf;;AAEA,oBAAG,CAACC,MAAMlG,IAAI6D,MAAJ,CAAWsC,IAAjB,CAAJ,EAA2B;AACxBF,iCAAWjG,IAAI6D,MAAJ,CAAWsC,IAAtB;AACD;AACD;;AAEA,oBAAIkB,MAAIC,KAAKC,KAAL,CAAWC,mBAAmBxH,IAAI6D,MAAJ,CAAW4D,KAA9B,CAAX,CAAR;AACAlE,wBAAQC,GAAR,CAAY6D,GAAZ;AACA,oBAAIjB,aAAa,SAAbA,UAAa,CAASC,QAAT,EAAkB;AAChC,sCAAQC,IAAR,CAAae,GAAb,EAAkB,UAAShH,GAAT,EAAckG,GAAd,EAAkB;AAC9B,4BAAGlG,GAAH,EAAO;AAAEgG,qCAAShG,GAAT,EAAc,IAAd;AAAqB,yBAA9B,MACI;AACAgG,qCAAS,IAAT,EAAeE,IAAIC,MAAnB;AACF;AACP,qBALD;AAME,iBAPL;;AASF,oBAAIC,gBAAgB,SAAhBA,aAAgB,CAASJ,QAAT,EAAkB;AAClC,sCAAQC,IAAR,CAAae,GAAb,EAAkBX,IAAlB,CAAuB,CAACT,aAAW,CAAZ,IAAe,EAAtC,EAA0CH,IAA1C,qBAAiDC,MAAjD,EAA0D,CAAC,CAA3D,GAA+DY,KAA/D,CAAqE,EAArE,EAAyEC,IAAzE,CAA8E,UAASvG,GAAT,EAAckG,GAAd,EAAkB;AAC/F,4BAAGlG,GAAH,EAAO;AAAEgG,qCAAShG,GAAT,EAAc,IAAd;AAAqB,yBAA9B,MACI;AACAgG,qCAAS,IAAT,EAAeE,GAAf;AACF;AACP,qBALI;AAOJ,iBARA;;AAUA,gCAAMM,QAAN,CAAe,CAACT,UAAD,EAAaK,aAAb,CAAf,EAA4C,UAASpG,GAAT,EAAcyG,OAAd,EAAsB;AAC9D,wBAAGzG,GAAH,EAAO;AACP;AACCJ,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACA,qBAHD,MAGK;AACJJ,4BAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACsG,aAAYC,KAAKC,KAAL,CAAWH,QAAQ,CAAR,IAAW,EAAX,GAAc,CAAzB,CAAb,EAA2CX,MAAMF,UAAjD,EAA6DiB,UAAUJ,QAAQ,CAAR,CAAvE,EAArB;AACA;AACJ,iBAPD;AASL;AACQ,SAjDR;AAkDF,KApDJ;;AAsDG;AACHhH,QAAI8F,GAAJ,CAAQ,8BAAR,EAAwC,UAAC5F,GAAD,EAAMC,GAAN,EAAc;AAClD;AACE,wBAAMC,OAAN,CAAc,EAACU,OAAMZ,IAAI6D,MAAJ,CAAWjD,KAAlB,EAAd,EAAuC,UAACP,GAAD,EAAKC,IAAL,EAAY;AACjD,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;;AAEE;AACA,oBAAIuF,aAAW,CAAf;;AAEA,oBAAG,CAACC,MAAMlG,IAAI6D,MAAJ,CAAWsC,IAAjB,CAAJ,EAA2B;AACxBF,iCAAWjG,IAAI6D,MAAJ,CAAWsC,IAAtB;AACD;AACD;AACA,oBAAIC,aAAa,SAAbA,UAAa,CAASC,QAAT,EAAkB;AAChC,sCAAQC,IAAR,CAAa,EAACxF,aAAa,IAAI4G,MAAJ,CAAW1H,IAAI6D,MAAJ,CAAWoB,MAAtB,EAA6B,GAA7B,CAAd,EAAb,EAA+D,UAAS5E,GAAT,EAAckG,GAAd,EAAkB;AAC3E,4BAAGlG,GAAH,EAAO;AAAEgG,qCAAShG,GAAT,EAAc,IAAd;AAAqB,yBAA9B,MACI;AACAgG,qCAAS,IAAT,EAAeE,IAAIC,MAAnB;AACF;AACP,qBALD;AAME,iBAPL;;AASF,oBAAIC,gBAAgB,SAAhBA,aAAgB,CAASJ,QAAT,EAAkB;AAClC,sCAAQC,IAAR,CAAa,EAACxF,aAAa,IAAI4G,MAAJ,CAAW1H,IAAI6D,MAAJ,CAAWoB,MAAtB,EAA6B,GAA7B,CAAd,EAAb,EAA+DyB,IAA/D,CAAoE,CAACT,aAAW,CAAZ,IAAe,EAAnF,EAAuFU,KAAvF,CAA6F,EAA7F,EAAiGC,IAAjG,CAAsG,UAASvG,GAAT,EAAckG,GAAd,EAAkB;AACvH,4BAAGlG,GAAH,EAAO;AAAEgG,qCAAShG,GAAT,EAAc,IAAd;AAAqB,yBAA9B,MACI;AACAgG,qCAAS,IAAT,EAAeE,GAAf;AACF;AACP,qBALI;AAOJ,iBARA;;AAUA,gCAAMM,QAAN,CAAe,CAACT,UAAD,EAAaK,aAAb,CAAf,EAA4C,UAASpG,GAAT,EAAcyG,OAAd,EAAsB;AAC9D,wBAAGzG,GAAH,EAAO;AACP;AACCJ,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACA,qBAHD,MAGK;AACJJ,4BAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACsG,aAAYC,KAAKC,KAAL,CAAWH,QAAQ,CAAR,IAAW,EAAX,GAAc,CAAzB,CAAb,EAA2CX,MAAMF,UAAjD,EAA6DiB,UAAUJ,QAAQ,CAAR,CAAvE,EAArB;AACA;AACJ,iBAPD;AASL;AACQ,SAzCR;AA0CF,KA5CJ;;AA+CI;AACAhH,QAAI8D,GAAJ,CAAQ,qBAAR,EAA+B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACzC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAGLwB,oDAAQkF,QAAR,GAAiBpH,IAAII,IAAJ,CAASgH,QAA1B;AACClF,oDAAQyF,YAAR,GAAqB3H,IAAII,IAAJ,CAASiD,IAA9B;AACGnB,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;;AAIJJ,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,kBAAT,EAArB;AACH,iDALD,MAKK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAZD;AAeC;AAGZ,qCA3BD,MA2BK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCApCD;AAyCF,6BA1CF,MA0CM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBAxDD,MAwDK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBA/DD;AAgEK;AACQ,SArER;AAsEF,KAxEJ;;AA0EI;AACJP,QAAI8D,GAAJ,CAAQ,wBAAR,EAAkC,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AAC5C;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAGLwB,oDAAQ0F,WAAR,GAAoB5H,IAAII,IAAJ,CAASwH,WAA7B;AACA1F,oDAAQ2F,eAAR,GAAwB7H,IAAII,IAAJ,CAASiD,IAAjC;AACInB,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;;AAIJJ,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,qBAAT,EAArB;AACH,iDALD,MAKK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAZD;AAeC;AAGZ,qCA3BD,MA2BK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCApCD;AAyCF,6BA1CF,MA0CM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBAxDD,MAwDK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBA/DD;AAgEK;AACQ,SArER;AAsEF,KAxEJ;;AA0EI;AACJP,QAAI8D,GAAJ,CAAQ,iBAAR,EAA2B,UAAC5D,GAAD,EAAMC,GAAN,EAAc;AACrC;AACE,uBAAKC,OAAL,CAAa,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAb,EAAoC,UAACE,GAAD,EAAKC,IAAL,EAAY;AAC9C,gBAAGA,QAAMC,SAAT,EAAmB;AAClBN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB;AACH,aAFE,MAEE;AACT,gCAAMR,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAqC,UAACE,GAAD,EAAKM,KAAL,EAAa;;AAE9C,wBAAG,CAACN,GAAJ,EAAQ;;AAEJ,4BAAGM,SAAOJ,SAAV,EAAoB;AAAE;;AAElBN,gCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB;AACH,yBAHD,MAGK;;AAEF,gCAAGC,MAAMC,KAAN,IAAaZ,IAAII,IAAJ,CAASQ,KAAtB,IAA+BN,KAAK0D,QAAL,GAAc,CAAhD,EAAkD;AAAG;AACjD,kDAAQ9D,OAAR,CAAgB,EAACwB,KAAI1B,IAAI6D,MAAJ,CAAWC,EAAhB,EAAhB,EAAoC,UAACzD,GAAD,EAAK6B,OAAL,EAAe;;AAG3C,wCAAG,CAAC7B,GAAJ,EAAQ;AACA,4CAAG6B,YAAU3B,SAAb,EAAuB;;AAEnBN,gDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,wBAAT,EAArB;AACH,yCAHD,MAGK;;AAEH,gDAAGwB,QAAQ4F,MAAR,IAAgB,CAAnB,EAAqB;AACvB5F,wDAAQ4F,MAAR,GAAe,CAAf;AACG,6CAFD,MAEK;AACH5F,wDAAQ4F,MAAR,GAAe,CAAf;AACD;AACC5F,oDAAQD,IAAR,CAAa,UAAC5B,GAAD,EAAO;;AAEhB,oDAAG,CAACA,GAAJ,EAAQ;;AAEJJ,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,eAAT,EAArB;AACH,iDAHD,MAGK;;AAEDT,wDAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqB,EAACjD,SAAQ,sBAAT,EAArB;AACH;AAEJ,6CAVD;AAaC;AAGZ,qCA3BD,MA2BK;;AAEDT,4CAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAGR,iCApCD;AAyCF,6BA1CF,MA0CM;AACDJ,oCAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AAEH;AAEJ;AAEJ,qBAxDD,MAwDK;;AAEGT,4BAAIO,MAAJ,CAAW,GAAX,EAAgBmD,IAAhB,CAAqBtD,GAArB;AACH;AAER,iBA/DD;AAgEK;AACQ,SArER;AAsEF,KAxEJ;;AA0EN,WAAOP,GAAP;AACD,C","file":"product.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport async from 'async';\r\nimport { Router } from 'express';\r\nimport Login from '../model/login';\r\nimport Product from '../model/product';\r\nimport Review from '../model/review';\r\nimport User from '../model/user';\r\nimport nodemailer from 'nodemailer';\r\nimport fs from 'fs';\r\nimport ejs from 'ejs';\r\nimport College from '../model/college';\r\nimport Category from '../model/category';\r\nimport Notification from '../model/notification';\r\nimport bodyParser from 'body-parser';\r\nexport default({ config, db }) => {\r\n  let api = Router();\r\n\r\n  // '/v1/product/add/emailID'\r\n  api.post('/add', (req, res) => {\r\n   //check token\r\n\r\n     User.findOne({email:req.body.email},(err,user)=>{\r\n       if(user==undefined){\r\n        res.status(400).json({ message: 'User not found!' });\r\n    }else{\r\nLogin.findOne({email:req.body.email},(err,login)=>{\r\n\r\n    if(!err){\r\n\r\n        if(login==undefined){ //user not found\r\n\r\n            res.status(400).json({ message: 'User not Logged In!' });\r\n        }else{\r\n\r\n            if(login.token==req.body.token){  //token matching\r\n               \r\n                    let newProduct=new Product();\r\n                    newProduct.productName=req.body.productName;\r\n                   // newproduct.image=req.body.name; saved for later\r\n                   newProduct.productAge=req.body.productAge;\r\n                   newProduct.productDescription=req.body.description;\r\n                   newProduct.referenceLink=req.body.referenceLink;\r\n                   newProduct.college=user.college;\r\n                   newProduct.city=user.city;\r\n                   newProduct.image1=req.body.image1;\r\n                   newProduct.image2=req.body.image2;\r\n                   newProduct.image3=req.body.image3;\r\n                   newProduct.image4=req.body.image4;\r\n                    newProduct.userId=user._id,\r\n                    newProduct.rentPerAmount=req.body.rentPerAmount,\r\n                    newProduct.condition=req.body.condition,\r\n                    newProduct.rentTimeType=req.body.rentTimeType,\r\n                    newProduct.isSecurityAmount=req.body.isSecurityAmount,\r\n                    newProduct.userName=req.body.userName,\r\n                    newProduct.securityAmount=req.body.securityAmount,\r\n                    newProduct.save((err,product)=>{\r\n\r\n                        if(!err){\r\n                            let newNotification=new Notification();\r\n                            newNotification.userId=user._id;\r\n                            newNotification.message=\"Status Pending!\"\r\n                            newNotification.description=\"You product \"+product.productName+\" is peding on approval by moderators will get back to you soon!\";\r\n                            newNotification.type=1;\r\n                            newNotification.refId=user._id;\r\n                            newNotification.link=\"/product\";\r\n                            //sending mail \r\n                            var transporter = nodemailer.createTransport({\r\n                              service: 'Gmail',\r\n                              auth: {\r\n                              user: 'toshikverma1@gmail.com', // Your email id\r\n                              pass: '123123123a' // Your password\r\n                              }\r\n                          });\r\n                          var templateString = fs.readFileSync('views/approvals.ejs', 'utf-8');\r\n                          var mailOptions = {\r\n                              from: 'toshikverma@gmail.com', // sender address\r\n                              to: user.email, // list of receivers\r\n                              subject: 'Product Saved', // Subject line\r\n                              html: ejs.render(templateString,{heading:\"pending approval\",name:user.fname,message:\"Your Product is upload and pending approval!\",productName:req.body.productName},(err)=>{\r\n                              if(err){\r\n                                  console.log(err);\r\n                              }\r\n                              }) \r\n                              \r\n                          };\r\n                          transporter.sendMail(mailOptions, function (err, info) {\r\n                              if(err)\r\n                              console.log(err)\r\n                              \r\n                              else\r\n                              console.log(info);\r\n                          });\r\n                          //sending mail ends\r\n                                                                                                                            \r\n                            newNotification.save();\r\n                                res.status(200).json(product);\r\n\r\n                        }else{\r\n\r\n                                res.status(400).json({message:\"product not saved!\"});\r\n                        }\r\n                    });\r\n                   \r\n\r\n\r\n            }else{\r\n                res.status(400).json({ message: 'invalid token!' });\r\n\r\n            }\r\n      \r\n        }\r\n       \r\n    }else{\r\n\r\n            res.status(400).send(err);\r\n        }\r\n  \r\n});\r\n    }\r\n            });\r\n  });\r\n\r\n  //updating a product\r\n\r\n  api.put('/update/:id', (req, res) => {\r\n    //check password or match password\r\n      User.findOne({email:req.body.email},(err,user)=>{\r\n        if(user==undefined){\r\n         res.status(400).json({ message: 'User not found!' });\r\n     }else{\r\n Login.findOne({email:req.body.email},(err,login)=>{\r\n \r\n     if(!err){\r\n \r\n         if(login==undefined){ //user not found\r\n \r\n             res.status(400).json({ message: 'User not Logged In!' });\r\n         }else{\r\n \r\n             if(login.token==req.body.token){  //token matching\r\n                Product.findOne({_id:req.params.id},(err,product)=>{\r\n\r\n                   \r\n                        if(!err){\r\n                                if(product===undefined){\r\n\r\n                                    res.status(400).send({message:\"no such product exsist\"});\r\n                                }else{\r\n                               console.log(user._id);\r\n                               console.log(product.userId);\r\n                                    if(user._id.equals(product.userId) || login.userType>0){ //here user who created the product can make changes and the admin\r\n                                    product.productName=req.body.productName;\r\n                                    product.productDescription=req.body.description;\r\n                                    product.referenceLink=req.body.referenceLink;\r\n                                    product.condition=req.body.condition;\r\n                                    product.rentPerAmount=req.body.rentPerAmount;\r\n                                    product.rentTimeType=req.body.rentTimeType;\r\n                                    product.isSecurityAmount=req.body.isSecurityAmount;\r\n                                    product.securityAmount=req.body.securityAmount;\r\n                                    product.productAge=req.body.productAge;\r\n                                    product.lastEdit=Date();\r\n                                    product.image1=req.body.image1;\r\n                                    product.image2=req.body.image2;\r\n                                    product.image3=req.body.image3;\r\n                                    product.image4=req.body.image4;\r\n                                    product.imageApproved=0;\r\n                                    product.linkApproved=0;\r\n                                    product.productApproved=0;\r\n                                    product.facebookLink=req.body.facebooklink;\r\n                                    product.youtubeLink=req.body.youtubelink;\r\n                                    product.twitterLink=req.body.twitterlink;\r\n                                    product.save((err,product)=>{\r\n\r\n                                        if(!err){\r\n\r\n                                            res.status(200).send(product);\r\n                                        }else{\r\n\r\n                                            res.status(400).send({message:\"product was not saved\"});\r\n                                        }\r\n                                    \r\n                                    });\r\n\r\n                                }else{\r\n                                    \r\n                                      res.status(400).send({message:\"not authorized to update product\"});\r\n                                     }\r\n                                    }\r\n\r\n\r\n                        }else{\r\n\r\n                            res.status(400).send(err);\r\n                        }\r\n\r\n                    \r\n                });\r\n                    \r\n                    \r\n \r\n \r\n             }else{\r\n                 res.status(400).json({ message: 'invalid token!' });\r\n \r\n             }\r\n       \r\n         }\r\n        \r\n     }else{\r\n \r\n             res.status(400).send(err);\r\n         }\r\n   \r\n });\r\n     }\r\n             });\r\n   });\r\n //deleting a product\r\n api.delete('/delete/:id/:token/:email', (req, res) => {\r\n    //check token\r\n      User.findOne({email:req.params.email},(err,user)=>{\r\n        if(user==undefined){\r\n         res.status(400).json({ message: 'User not found!' });\r\n     }else{\r\n Login.findOne({email:req.params.email},(err,login)=>{\r\n \r\n     if(!err){\r\n \r\n         if(login==undefined){ //user not found\r\n \r\n             res.status(400).json({ message: 'User not Logged In!' });\r\n         }else{\r\n \r\n             if(login.token===req.params.token){  //token matching\r\n                Product.findOne({_id:req.params.id},(err,product)=>{\r\n\r\n                   \r\n                        if(!err){\r\n                                if(product===undefined || product===null){\r\n                                    console.log(\"I was here!!!!!!!\");\r\n                                    res.status(404).json({message:\"no such product exsist\"});\r\n                                }else{\r\n\r\n                                    if(user._id.equals(product.userId) || login.userType>0){\r\n                                \r\n                                    product.remove((err)=>{\r\n\r\n                                        if(!err){\r\n\r\n                                            res.status(200).send({message:\"product deleted successsfully!\"});\r\n                                        }else{\r\n\r\n                                            res.status(400).send({message:\"product was not deleted\"});\r\n                                        }\r\n                                    \r\n                                    });\r\n\r\n                                }else{\r\n                                    \r\n                                      res.status(400).send({message:\"not authorized to delete product\"});\r\n                                     }\r\n                                    }\r\n\r\n\r\n                        }else{\r\n\r\n                            res.status(400).send(err);\r\n                        }\r\n\r\n                    \r\n                });\r\n                    \r\n                    \r\n \r\n \r\n             }else{\r\n                 res.status(400).json({ message: 'invalid token!' });\r\n \r\n             }\r\n       \r\n         }\r\n        \r\n     }else{\r\n \r\n             res.status(500).send(err);\r\n         }\r\n   \r\n });\r\n     }\r\n             });\r\n   });\r\n\r\n    //adding a view\r\n api.put('/addview/:id', (req, res) => {\r\n    //check token\r\n      \r\n                Product.findOne({_id:req.params.id},(err,product)=>{\r\n\r\n                   \r\n                        if(!err){\r\n                                if(product===undefined){\r\n\r\n                                    res.status(400).send({message:\"no such product exsist\"});\r\n                                }else{\r\n                            \r\n                                  \r\n                                product.pageView=product.pageView+1;\r\n                                    product.save((err)=>{\r\n\r\n                                        if(!err){\r\n\r\n                                            res.status(200).send({message:\"increased page view\"});\r\n                                        }else{\r\n\r\n                                            res.status(400).send({message:\"some problem occured\"});\r\n                                        }\r\n                                    \r\n                                    });\r\n\r\n                              \r\n                                    }\r\n\r\n\r\n                        }else{\r\n\r\n                            res.status(400).send(err);\r\n                        }\r\n\r\n                    \r\n                });            \r\n   });\r\n   //adding to wishlist\r\n   api.put('/addwishlist/:id', (req, res) => {\r\n    //check token\r\n      User.findOne({email:req.body.email},(err,user)=>{\r\n        if(user==undefined){\r\n         res.status(400).json({ message: 'User not found!' });\r\n     }else{\r\n Login.findOne({email:req.body.email},(err,login)=>{\r\n \r\n     if(!err){\r\n \r\n         if(login==undefined){ //user not found\r\n \r\n             res.status(400).json({ message: 'User not Logged In!' });\r\n         }else{\r\n \r\n             if(login.token===req.body.token){  //token matching\r\n                Product.findOne({_id:req.params.id},(err,product)=>{\r\n\r\n                   \r\n                        if(!err){\r\n                                if(product===undefined){\r\n\r\n                                    res.status(400).send({message:\"no such product exsist\"});\r\n                                }else{\r\n                                    let a=-1;\r\n                                    if(product.wishList===undefined){\r\n                                        product.wishList=user.email+\",\";\r\n                                    }else{\r\n                                    a=product.wishList.search(user.email+\",\");\r\n                                     } \r\n                                     if(a<0){\r\n                                        product.wishList=product.wishList+user.email+\",\"\r\n                                    product.save((err)=>{\r\n\r\n                                        if(!err){\r\n\r\n                                            res.status(200).send({message:\"added to wishlist \"});\r\n                                        }else{\r\n\r\n                                            res.status(400).send({message:\"some problem occured\"});\r\n                                        }\r\n                                    \r\n                                    });\r\n\r\n                                }else{\r\n\r\n                                    res.status(200).send({message:\"added to wishlist \"});\r\n                                }\r\n                                    }\r\n\r\n\r\n                        }else{\r\n\r\n                            res.status(400).send(err);\r\n                        }\r\n\r\n                    \r\n                });\r\n                    \r\n                    \r\n \r\n \r\n             }else{\r\n                 res.status(400).json({ message: 'invalid token!' });\r\n \r\n             }\r\n       \r\n         }\r\n        \r\n     }else{\r\n \r\n             res.status(400).send(err);\r\n         }\r\n   \r\n });\r\n     }\r\n             });\r\n   });\r\n   //removing from wishlist\r\n   api.put('/removewishlist/:id', (req, res) => {\r\n    //check token\r\n      User.findOne({email:req.body.email},(err,user)=>{\r\n        if(user==undefined){\r\n         res.status(400).json({ message: 'User not found!' });\r\n     }else{\r\n Login.findOne({email:req.body.email},(err,login)=>{\r\n \r\n     if(!err){\r\n \r\n         if(login==undefined){ //user not found\r\n \r\n             res.status(400).json({ message: 'User not Logged In!' });\r\n         }else{\r\n \r\n             if(login.token===req.body.token){  //token matching\r\n                Product.findOne({_id:req.params.id},(err,product)=>{\r\n\r\n                   \r\n                        if(!err){\r\n                                if(product===undefined){\r\n\r\n                                    res.status(400).send({message:\"no such product exsist\"});\r\n                                }else{\r\n                                    let a=-1;\r\n                                    if(product.wishList===undefined){\r\n                                        res.status(400).send({message:\"wishlist is empty!\"});\r\n                                    }else{\r\n                                    a=product.wishList.search(user.email+\",\");\r\n                                     } \r\n                                     if(a>=0){\r\n                                        product.wishList=product.wishList.replace(user.email+\",\",\"\");\r\n                                    product.save((err)=>{\r\n\r\n                                        if(!err){\r\n\r\n                                            res.status(200).send({message:\"removed from wishlist \"});\r\n                                        }else{\r\n\r\n                                            res.status(400).send({message:\"some problem occured\"});\r\n                                        }\r\n                                    \r\n                                    });\r\n\r\n                                }else{\r\n\r\n                                    res.status(200).send({message:\"removed from wishlist \"});\r\n                                }\r\n                                    }\r\n\r\n\r\n                        }else{\r\n\r\n                            res.status(400).send(err);\r\n                        }\r\n\r\n                    \r\n                });\r\n                    \r\n                    \r\n \r\n \r\n             }else{\r\n                 res.status(400).json({ message: 'invalid token!' });\r\n \r\n             }\r\n       \r\n         }\r\n        \r\n     }else{\r\n \r\n             res.status(400).send(err);\r\n         }\r\n   \r\n });\r\n     }\r\n             });\r\n   });\r\n\r\n    //adding review\r\n    api.put('/addreview/:id', (req, res) => {\r\n        //check token\r\n          User.findOne({email:req.body.email},(err,user)=>{\r\n            if(user==undefined){\r\n             res.status(400).json({ message: 'User not found!' });\r\n         }else{\r\n     Login.findOne({email:req.body.email},(err,login)=>{\r\n     \r\n         if(!err){\r\n     \r\n             if(login==undefined){ //user not found\r\n     \r\n                 res.status(400).json({ message: 'User not Logged In!' });\r\n             }else{\r\n     \r\n                 if(login.token===req.body.token){  //token matching\r\n                    Product.findOne({_id:req.params.id},(err,product)=>{\r\n    \r\n                       \r\n                            if(!err){\r\n                                    if(product===undefined){\r\n    \r\n                                        res.status(400).send({message:\"no such product exsist\"});\r\n                                    }else{\r\n                                        \r\n                                            Review.findOne({userId:user._id,productId:req.params.id},(err,review)=>{\r\n\r\n                                                if(!err){\r\n\r\n                                                    if(review===null){\r\n                                                        if(req.body.value>5 || req.body.value<.5){\r\n\r\n                                                            res.status(400).send({message:\"value of the rating should be between 0.5 and 5\"});\r\n                                                        }else{\r\n                                                        let newReview=new Review();\r\n                                                        newReview.userId=user._id;\r\n                                                        newReview.productId=req.params.id;\r\n                                                        newReview.value=req.body.value;\r\n                                                        newReview.description=req.body.description;\r\n                                                        product.ratings=((product.numberOfRatings*product.ratings)+req.body.value)/(product.numberOfRatings+1);\r\n                                                        product.numberOfRatings=product.numberOfRatings+1;\r\n                                                        newReview.save((err)=>{\r\n\r\n                                                            if(!err){\r\n\r\n                                                                \r\n                                                                product.save((err)=>{\r\n\r\n                                                                    if(err){\r\n\r\n                                                                       res.status(500).send(err);\r\n                                                                    }\r\n                                                                     res.status(200).send({message:\"review has been saved!\"});\r\n                                                                });\r\n                                                            }else{\r\n\r\n                                                                res.status(500).send(err);\r\n                                                            }\r\n                                                        });\r\n                                                        \r\n                                                    }\r\n                                                }else{\r\n                                                      \r\n                                                      if(req.body.value>5 || req.body.value<.5){\r\n                                                        \r\n                                                       res.status(400).send({message:\"value of the rating should be between 0.5 and 5\"});\r\n                                                        }else{\r\n                                                      if(product.numberOfRatings===1){\r\n                                                          product.ratings=req.body.value;\r\n                                                      }else{\r\n                                                    product.ratings=((product.numberOfRatings*product.ratings)-review.value)/(product.numberOfRatings-1);\r\n                                                    product.ratings=(((product.numberOfRatings-1)*product.ratings)+req.body.value)/product.numberOfRatings;\r\n                                                }\r\n                                                    review.value=req.body.value;\r\n                                                    review.description=req.body.description;\r\n                                                    review.save((err)=>{\r\n\r\n                                                        if(!err){\r\n\r\n                                                           \r\n                                                            product.save((err)=>{\r\n\r\n                                                               if(err){\r\n\r\n                                                                       res.status(500).send(err);\r\n                                                                    }\r\n                                                                     res.status(200).send({message:\"review has been saved!\"});\r\n                                                            });\r\n                                                        }else{\r\n\r\n                                                            res.status(500).send(err);\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            \r\n                                           } \r\n                                        }else{\r\n\r\n                                                res.status(500).send(err);\r\n                                            }\r\n                                            });\r\n\r\n                                        }\r\n    \r\n    \r\n                            }else{\r\n    \r\n                                res.status(400).send(err);\r\n                            }\r\n    \r\n                        \r\n                    });\r\n                        \r\n                        \r\n     \r\n     \r\n                 }else{\r\n                     res.status(400).json({ message: 'invalid token!' });\r\n     \r\n                 }\r\n           \r\n             }\r\n            \r\n         }else{\r\n     \r\n                 res.status(400).send(err);\r\n             }\r\n       \r\n     });\r\n         }\r\n                 });\r\n       });\r\n\r\n       //approvals starts here!\r\n       //approving product\r\n       api.put('/approveproduct/:id', (req, res) => {\r\n        //check token\r\n          User.findOne({email:req.body.email},(err,user)=>{\r\n            if(user==undefined){\r\n             res.status(400).json({ message: 'User not found!' });\r\n         }else{\r\n     Login.findOne({email:req.body.email},(err,login)=>{\r\n     \r\n         if(!err){\r\n     \r\n             if(login==undefined){ //user not found\r\n     \r\n                 res.status(400).json({ message: 'User not Logged In!' });\r\n             }else{\r\n     \r\n                if(login.token==req.body.token && user.userType>0){  //token matching\r\n                    Product.findOne({_id:req.params.id},(err,product)=>{\r\n    \r\n                       \r\n                            if(!err){\r\n                                    if(product===undefined){\r\n    \r\n                                        res.status(400).send({message:\"no such product exsist\"});\r\n                                    }else{\r\n                                \r\n                                      \r\n                                    product.productApproved=1;\r\n                                        product.save((err)=>{\r\n    \r\n                                            if(!err){\r\n                                                let newNotification=new Notification();\r\n                                                newNotification.userId=product.userId;\r\n                                                newNotification.message=\"Product Approved!\"\r\n                                                newNotification.description=\"Your product \"+product.productName+\" has been approved\";\r\n                                                newNotification.type=1;\r\n                                                newNotification.refId=product._id;\r\n                                                newNotification.link=\"/product\";\r\n                                                User.findById((product.userId),(err,ownerUser)=>{\r\n                                                    \r\n                                                                                                    if(!err){\r\n                                                //sending mail \r\n      var transporter = nodemailer.createTransport({\r\n        service: 'Gmail',\r\n        auth: {\r\n        user: 'toshikverma1@gmail.com', // Your email id\r\n        pass: '123123123a' // Your password\r\n        }\r\n    });\r\n    var templateString = fs.readFileSync('views/approvals.ejs', 'utf-8');\r\n    var mailOptions = {\r\n        from: 'toshikverma@gmail.com', // sender address\r\n        to: ownerUser.email, // list of receivers\r\n        subject: 'Approvals', // Subject line\r\n        html: ejs.render(templateString,{heading:\"Accepted\",name:ownerUser.fname,message:\"Your Product is Approved!\",productName:product.productName},(err)=>{\r\n        if(err){\r\n            console.log(err);\r\n        }\r\n        }) \r\n        \r\n    };\r\n    transporter.sendMail(mailOptions, function (err, info) {\r\n        if(err)\r\n        console.log(err)\r\n        \r\n        else\r\n        console.log(info);\r\n    });\r\n    //sending mail ends\r\n                                                                                                    }});    \r\n                                                newNotification.save();\r\n                                                res.status(200).send({message:\"product approved!\"});\r\n                                            }else{\r\n    \r\n                                                res.status(400).send({message:\"some problem occured\"});\r\n                                            }\r\n                                        \r\n                                        });\r\n    \r\n                                  \r\n                                        }\r\n    \r\n    \r\n                            }else{\r\n    \r\n                                res.status(400).send(err);\r\n                            }\r\n    \r\n                        \r\n                    });\r\n                        \r\n                        \r\n     \r\n     \r\n                 }else{\r\n                     res.status(400).json({ message: 'invalid token!' });\r\n     \r\n                 }\r\n           \r\n             }\r\n            \r\n         }else{\r\n     \r\n                 res.status(400).send(err);\r\n             }\r\n       \r\n     });\r\n         }\r\n                 });\r\n       });\r\n        //approving link\r\n        api.put('/approvelink/:id', (req, res) => {\r\n            //check token\r\n              User.findOne({email:req.body.email},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not found!' });\r\n             }else{\r\n         Login.findOne({email:req.body.email},(err,login)=>{\r\n         \r\n             if(!err){\r\n         \r\n                 if(login==undefined){ //user not found\r\n         \r\n                     res.status(400).json({ message: 'User not Logged In!' });\r\n                 }else{\r\n         \r\n                    if(login.token==req.body.token && user.userType>0){  //token matching\r\n                        Product.findOne({_id:req.params.id},(err,product)=>{\r\n        \r\n                           \r\n                                if(!err){\r\n                                        if(product===undefined){\r\n        \r\n                                            res.status(400).send({message:\"no such product exsist\"});\r\n                                        }else{\r\n                                    \r\n                                          \r\n                                        product.linkApproved=1;\r\n                                            product.save((err)=>{\r\n        \r\n                                                if(!err){\r\n        \r\n                                                    res.status(200).send({message:\"link  approved!\"});\r\n                                                }else{\r\n        \r\n                                                    res.status(400).send({message:\"some problem occured\"});\r\n                                                }\r\n                                            \r\n                                            });\r\n        \r\n                                      \r\n                                            }\r\n        \r\n        \r\n                                }else{\r\n        \r\n                                    res.status(400).send(err);\r\n                                }\r\n        \r\n                            \r\n                        });\r\n                            \r\n                            \r\n         \r\n         \r\n                     }else{\r\n                         res.status(400).json({ message: 'invalid token!' });\r\n         \r\n                     }\r\n               \r\n                 }\r\n                \r\n             }else{\r\n         \r\n                     res.status(400).send(err);\r\n                 }\r\n           \r\n         });\r\n             }\r\n                     });\r\n           });\r\n           //approving  iamges\r\n        api.put('/approveimages/:id', (req, res) => {\r\n            //check token\r\n              User.findOne({email:req.body.email},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not found!' });\r\n             }else{\r\n         Login.findOne({email:req.body.email},(err,login)=>{\r\n         \r\n             if(!err){\r\n         \r\n                 if(login==undefined){ //user not found\r\n         \r\n                     res.status(400).json({ message: 'User not Logged In!' });\r\n                 }else{\r\n         \r\n                    if(login.token==req.body.token && user.userType>0){  //token matching\r\n                        Product.findOne({_id:req.params.id},(err,product)=>{\r\n        \r\n                           \r\n                                if(!err){\r\n                                        if(product===undefined){\r\n        \r\n                                            res.status(400).send({message:\"no such product exsist\"});\r\n                                        }else{\r\n                                    \r\n                                          \r\n                                        product.imageApproved=1;\r\n                                            product.save((err)=>{\r\n        \r\n                                                if(!err){\r\n        \r\n                                                    res.status(200).send({message:\"image approved!\"});\r\n                                                }else{\r\n        \r\n                                                    res.status(400).send({message:\"some problem occured\"});\r\n                                                }\r\n                                            \r\n                                            });\r\n        \r\n                                      \r\n                                            }\r\n        \r\n        \r\n                                }else{\r\n        \r\n                                    res.status(400).send(err);\r\n                                }\r\n        \r\n                            \r\n                        });\r\n                            \r\n                            \r\n         \r\n         \r\n                     }else{\r\n                         res.status(400).json({ message: 'invalid token!' });\r\n         \r\n                     }\r\n               \r\n                 }\r\n                \r\n             }else{\r\n         \r\n                     res.status(400).send(err);\r\n                 }\r\n           \r\n         });\r\n             }\r\n                     });\r\n           });\r\n            //rejecting product\r\n       api.put('/rejectproduct/:id', (req, res) => {\r\n        //check token\r\n          User.findOne({email:req.body.email},(err,user)=>{\r\n            if(user==undefined){\r\n             res.status(400).json({ message: 'User not found!' });\r\n         }else{\r\n     Login.findOne({email:req.body.email},(err,login)=>{\r\n     \r\n         if(!err){\r\n     \r\n             if(login==undefined){ //user not found\r\n     \r\n                 res.status(400).json({ message: 'User not Logged In!' });\r\n             }else{\r\n     \r\n                if(login.token==req.body.token && user.userType>0){  //token matching\r\n                    Product.findOne({_id:req.params.id},(err,product)=>{\r\n    \r\n                       \r\n                            if(!err){\r\n                                    if(product===undefined){\r\n    \r\n                                        res.status(400).send({message:\"no such product exsist\"});\r\n                                    }else{\r\n                                \r\n                                      \r\n                                    product.productApproved=2;\r\n                                        product.save((err)=>{\r\n    \r\n                                            if(!err){\r\n                                                    let newNotification=new Notification();\r\n                                                    newNotification.userId=product.userId;\r\n                                                    newNotification.message=\"Product Rejected!\"\r\n                                                    newNotification.description=req.body.description;\r\n                                                    newNotification.type=1;\r\n                                                    newNotification.refId=product._id;\r\n                                                    newNotification.link=\"/product\";\r\n                                                    User.findById((product.userId),(err,ownerUser)=>{\r\n                                                        \r\n                                                                                                        if(!err){\r\n                                                    //sending mail \r\n          var transporter = nodemailer.createTransport({\r\n            service: 'Gmail',\r\n            auth: {\r\n            user: 'toshikverma1@gmail.com', // Your email id\r\n            pass: '123123123a' // Your password\r\n            }\r\n        });\r\n        var templateString = fs.readFileSync('views/rejected.ejs', 'utf-8');\r\n        var mailOptions = {\r\n            from: 'toshikverma@gmail.com', // sender address\r\n            to: ownerUser.email, // list of receivers\r\n            subject: 'Approvals', // Subject line\r\n            html: ejs.render(templateString,{heading:\"Rejected\",name:ownerUser.fname,message:\"Your Product is Rejected!\",productName:product.productName,reason:req.body.description},(err)=>{\r\n            if(err){\r\n                console.log(err);\r\n            }\r\n            }) \r\n            \r\n        };\r\n        transporter.sendMail(mailOptions, function (err, info) {\r\n            if(err)\r\n            console.log(err)\r\n            \r\n            else\r\n            console.log(info);\r\n        });\r\n        //sending mail ends\r\n                                                                                                        }});      \r\n                                                    newNotification.save();\r\n                                                res.status(200).send({message:\"product rejected!\"});\r\n                                            }else{\r\n    \r\n                                                res.status(400).send({message:\"some problem occured\"});\r\n                                            }\r\n                                        \r\n                                        });\r\n    \r\n                                  \r\n                                        }\r\n    \r\n    \r\n                            }else{\r\n    \r\n                                res.status(400).send(err);\r\n                            }\r\n    \r\n                        \r\n                    });\r\n                        \r\n                        \r\n     \r\n     \r\n                 }else{\r\n                     res.status(400).json({ message: 'invalid token!' });\r\n     \r\n                 }\r\n           \r\n             }\r\n            \r\n         }else{\r\n     \r\n                 res.status(400).send(err);\r\n             }\r\n       \r\n     });\r\n         }\r\n                 });\r\n       });\r\n        //approving link\r\n        api.put('/rejectlink/:id', (req, res) => {\r\n            //check token\r\n              User.findOne({email:req.body.email},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not found!' });\r\n             }else{\r\n         Login.findOne({email:req.body.email},(err,login)=>{\r\n         \r\n             if(!err){\r\n         \r\n                 if(login==undefined){ //user not found\r\n         \r\n                     res.status(400).json({ message: 'User not Logged In!' });\r\n                 }else{\r\n         \r\n                    if(login.token==req.body.token && user.userType>0){  //token matching\r\n                        Product.findOne({_id:req.params.id},(err,product)=>{\r\n        \r\n                           \r\n                                if(!err){\r\n                                        if(product===undefined){\r\n        \r\n                                            res.status(400).send({message:\"no such product exsist\"});\r\n                                        }else{\r\n                                    \r\n                                          \r\n                                        product.linkApproved=0;\r\n                                            product.save((err)=>{\r\n        \r\n                                                if(!err){\r\n                                                    let newNotification=new Notification();\r\n                                                    newNotification.userId=product.userId;\r\n                                                    newNotification.message=\"Link Rejected!\"\r\n                                                    newNotification.description=req.body.description;\r\n                                                    newNotification.type=1;\r\n                                                    newNotification.refId=product._id;\r\n                                                    newNotification.link=\"/product\";\r\n                                                    User.findById((product.userId),(err,ownerUser)=>{\r\n                                                        \r\n                                                                                                        if(!err){\r\n                                                    //sending mail \r\n          var transporter = nodemailer.createTransport({\r\n            service: 'Gmail',\r\n            auth: {\r\n            user: 'toshikverma1@gmail.com', // Your email id\r\n            pass: '123123123a' // Your password\r\n            }\r\n        });\r\n        var templateString = fs.readFileSync('views/rejected.ejs', 'utf-8');\r\n        var mailOptions = {\r\n            from: 'toshikverma@gmail.com', // sender address\r\n            to: ownerUser.email, // list of receivers\r\n            subject: 'Approvals', // Subject line\r\n            html: ejs.render(templateString,{heading:\"Rejected\",name:ownerUser.fname,message:\"Your Link is Rejected!\",productName:product.productName,reason:req.body.description},(err)=>{\r\n            if(err){\r\n                console.log(err);\r\n            }\r\n            }) \r\n            \r\n        };\r\n        transporter.sendMail(mailOptions, function (err, info) {\r\n            if(err)\r\n            console.log(err)\r\n            \r\n            else\r\n            console.log(info);\r\n        });\r\n        //sending mail ends\r\n                                                                                                        }});      \r\n                                                    newNotification.save();\r\n                                                    res.status(200).send({message:\"link  rejected!\"});\r\n                                                }else{\r\n        \r\n                                                    res.status(400).send({message:\"some problem occured\"});\r\n                                                }\r\n                                            \r\n                                            });\r\n        \r\n                                      \r\n                                            }\r\n        \r\n        \r\n                                }else{\r\n        \r\n                                    res.status(400).send(err);\r\n                                }\r\n        \r\n                            \r\n                        });\r\n                            \r\n                            \r\n         \r\n         \r\n                     }else{\r\n                         res.status(400).json({ message: 'invalid token!' });\r\n         \r\n                     }\r\n               \r\n                 }\r\n                \r\n             }else{\r\n         \r\n                     res.status(400).send(err);\r\n                 }\r\n           \r\n         });\r\n             }\r\n                     });\r\n           });\r\n           //approving  iamges\r\n        api.put('/rejectimages/:id', (req, res) => {\r\n            //check token\r\n              User.findOne({email:req.body.email},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not found!' });\r\n             }else{\r\n         Login.findOne({email:req.body.email},(err,login)=>{\r\n         \r\n             if(!err){\r\n         \r\n                 if(login==undefined){ //user not found\r\n         \r\n                     res.status(400).json({ message: 'User not Logged In!' });\r\n                 }else{\r\n         \r\n                    if(login.token==req.body.token && user.userType>0){  //token matching\r\n                        Product.findOne({_id:req.params.id},(err,product)=>{\r\n        \r\n                           \r\n                                if(!err){\r\n                                        if(product===undefined){\r\n        \r\n                                            res.status(400).send({message:\"no such product exsist\"});\r\n                                        }else{\r\n                                    \r\n                                          \r\n                                        product.imageApproved=0;\r\n                                            product.save((err)=>{\r\n        \r\n                                                if(!err){\r\n                                                    let newNotification=new Notification();\r\n                                                    newNotification.userId=product.userId;\r\n                                                    newNotification.message=\"Images Rejected!\"\r\n                                                    newNotification.description=req.body.description;\r\n                                                    newNotification.type=1;\r\n                                                    newNotification.refId=product._id;\r\n                                                    newNotification.link=\"/product\";\r\n                                                    User.findById((product.userId),(err,ownerUser)=>{\r\n                                                        \r\n                                                                                                        if(!err){\r\n                                                    //sending mail \r\n          var transporter = nodemailer.createTransport({\r\n            service: 'Gmail',\r\n            auth: {\r\n            user: 'toshikverma1@gmail.com', // Your email id\r\n            pass: '123123123a' // Your password\r\n            }\r\n        });\r\n        var templateString = fs.readFileSync('views/rejected.ejs', 'utf-8');\r\n        var mailOptions = {\r\n            from: 'toshikverma@gmail.com', // sender address\r\n            to: ownerUser.email, // list of receivers\r\n            subject: 'Approvals', // Subject line\r\n            html: ejs.render(templateString,{heading:\"Rejected\",name:ownerUser.fname,message:\"Your Images is Rejected!\",productName:product.productName,reason:req.body.description},(err)=>{\r\n            if(err){\r\n                console.log(err);\r\n            }\r\n            }) \r\n            \r\n        };\r\n        transporter.sendMail(mailOptions, function (err, info) {\r\n            if(err)\r\n            console.log(err)\r\n            \r\n            else\r\n            console.log(info);\r\n        });\r\n        //sending mail ends\r\n                                                                                                        }});      \r\n                                                    newNotification.save();\r\n                                                    res.status(200).send({message:\"image reject!\"});\r\n                                                }else{\r\n        \r\n                                                    res.status(400).send({message:\"some problem occured\"});\r\n                                                }\r\n                                            \r\n                                            });\r\n        \r\n                                      \r\n                                            }\r\n        \r\n        \r\n                                }else{\r\n        \r\n                                    res.status(400).send(err);\r\n                                }\r\n        \r\n                            \r\n                        });\r\n                            \r\n                            \r\n         \r\n         \r\n                     }else{\r\n                         res.status(400).json({ message: 'invalid token!' });\r\n         \r\n                     }\r\n               \r\n                 }\r\n                \r\n             }else{\r\n         \r\n                     res.status(400).send(err);\r\n                 }\r\n           \r\n         });\r\n             }\r\n                     });\r\n           });\r\n           //GET PRODUCTS BY COLLEGE\r\n           api.get('/productsbycollege/:token/:collegeId/:sortby/:page', (req, res) => {\r\n            //check token\r\n              Login.findOne({token:req.params.token},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not Login!' },);\r\n             }else{\r\n                 //checking correct college\r\n                College.findOne({email:req.params.collegeId},(err,user)=>{\r\n                    //checking correct sort if wrong sort by date\r\n                    let sort=[\"date\",\"rating\"];\r\n                    let sortby=\"date\";\r\n                    if(sort.indexOf(req.params.sortby) > -1){\r\n\r\n                        sortby=req.params.sortby;\r\n                    }\r\n                    //checking if page number is correct\r\n                    let pageNumber=1\r\n            \r\n                    if(!isNaN(req.params.page)){\r\n                       pageNumber=req.params.page;\r\n                     }\r\n                     //async query start here\r\n                     console.log(\"query started\");\r\n                     var countQuery = function(callback){\r\n                        Product.find({college:req.params.collegeId}, function(err, doc){\r\n                              if(err){ callback(err, null) }\r\n                              else{\r\n                                  callback(null, doc.length);\r\n                               }\r\n                        }\r\n                        )};\r\n                \r\n                   var retrieveQuery = function(callback){\r\n                       console.log((pageNumber-1)*12);\r\n                       Product.find({college:req.params.collegeId}).skip((pageNumber-1)*12).sort({sortby: -1}).limit(12).exec(function(err, doc){\r\n                        if(err){ callback(err, null) }\r\n                        else{\r\n                            callback(null, doc);\r\n                         }\r\n                  });\r\n                       \r\n                  };\r\n                \r\n                console.log(retrieveQuery);\r\n                   async.parallel([countQuery, retrieveQuery], function(err, results){\r\n                        //err contains the array of error of all the functions\r\n                        //results contains an array of all the results\r\n                        //results[0] will contain value of doc.length from countQuery function\r\n                        //results[1] will contain doc of retrieveQuery function\r\n                        //You can send the results as\r\n                       if(err){\r\n                       // console.log(\"error here\");\r\n                        res.status(500).send(err);\r\n                       }else{\r\n                        res.status(200).json({total_pages:Math.floor(results[0]/12+1) , page: pageNumber, products: results[1]});\r\n                       }\r\n                   });\r\n                });\r\n             }\r\n                     });\r\n           });\r\n\r\n           //GET single product\r\n           api.get('/singleproduct/:id', (req, res) => {\r\n            \r\n                Product.findById({_id:req.params.id},(err,prod)=>{\r\n                    if(!err){\r\n                        res.status(200).json({product:prod});\r\n                    }else{\r\n                        res.status(404).json({message:\"no product found!\"})\r\n                    }\r\n                  \r\n              });\r\n           }\r\n           );\r\n           //GET PRODUCTS BY CATEGORY\r\n           api.get('/productsbycategory/:token/:category/:sortby/:page', (req, res) => {\r\n            //check token\r\n              Login.findOne({token:req.params.token},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not Login!' },);\r\n             }else{\r\n                 //checking correct category\r\n                Category.findOne({_id:req.params.category},(err,user)=>{\r\n                    //checking correct sort if wrong sort by date\r\n                    let sort=[\"date\",\"rating\"];\r\n                    let sortby=\"date\";\r\n                    if(sort.indexOf(req.params.sortby) > -1){\r\n\r\n                        sortby=req.params.sortby;\r\n                    }\r\n                    //checking if page number is correct\r\n                    let pageNumber=1\r\n            \r\n                    if(!isNaN(req.params.page)){\r\n                       pageNumber=req.params.page;\r\n                     }\r\n                     //async query start here\r\n                     console.log(\"query started\");\r\n                     var countQuery = function(callback){\r\n                        Product.find({category:req.params.category}, function(err, doc){\r\n                              if(err){ callback(err, null) }\r\n                              else{\r\n                                  callback(null, doc.length);\r\n                               }\r\n                        }\r\n                        )};\r\n                \r\n                   var retrieveQuery = function(callback){\r\n                       console.log((pageNumber-1)*12);\r\n                       Product.find({category:req.params.category}).skip((pageNumber-1)*12).sort({sortby: -1}).limit(12).exec(function(err, doc){\r\n                        if(err){ callback(err, null) }\r\n                        else{\r\n                            callback(null, doc);\r\n                         }\r\n                  });\r\n                       \r\n                  };\r\n                \r\n                console.log(retrieveQuery);\r\n                   async.parallel([countQuery, retrieveQuery], function(err, results){\r\n                       if(err){\r\n                       // console.log(\"error here\");\r\n                        res.status(500).send(err);\r\n                       }else{\r\n                        res.status(200).json({total_pages:Math.floor(results[0]/12+1) , page: pageNumber, products: results[1]});\r\n                       }\r\n                   });\r\n                });\r\n             }\r\n                     });\r\n           });\r\n    //GET PRODUCTS BY DYNAMIC QUERY\r\n    api.get('/dynamic/:token/:query/:sortby/:page', (req, res) => {\r\n        //check token\r\n          Login.findOne({token:req.params.token},(err,user)=>{\r\n            if(user==undefined){\r\n             res.status(400).json({ message: 'User not Login!' },);\r\n         }else{\r\n                let sort=[\"lastEdit\",\"rating\"];\r\n                let sortby=\"lastEdit\";\r\n                if(sort.indexOf(req.params.sortby) > -1){\r\n\r\n                    sortby=req.params.sortby;\r\n                }\r\n                //checking if page number is correct\r\n                let pageNumber=1\r\n        \r\n                if(!isNaN(req.params.page)){\r\n                   pageNumber=req.params.page;\r\n                 }\r\n                 //async query start here\r\n                 \r\n                 let qry=JSON.parse(decodeURIComponent(req.params.query));\r\n                 console.log(qry)\r\n                 var countQuery = function(callback){\r\n                    Product.find(qry, function(err, doc){\r\n                          if(err){ callback(err, null) }\r\n                          else{\r\n                              callback(null, doc.length);\r\n                           }\r\n                    }\r\n                    )};\r\n            \r\n               var retrieveQuery = function(callback){\r\n                   Product.find(qry).skip((pageNumber-1)*12).sort({[sortby]: -1}).limit(12).exec(function(err, doc){\r\n                    if(err){ callback(err, null) }\r\n                    else{\r\n                        callback(null, doc);\r\n                     }\r\n              });\r\n                   \r\n              };\r\n            \r\n               async.parallel([countQuery, retrieveQuery], function(err, results){\r\n                   if(err){\r\n                   // console.log(\"error here\");\r\n                    res.status(500).send(err);\r\n                   }else{\r\n                    res.status(200).json({total_pages:Math.floor(results[0]/12+1) , page: pageNumber, products: results[1]});\r\n                   }\r\n               });\r\n            \r\n         }\r\n                 });\r\n       });       \r\n\r\n       //GET PRODUCTS BY SEARCH QUERY\r\n    api.get('/search/:token/:search/:page', (req, res) => {\r\n        //check token\r\n          Login.findOne({token:req.params.token},(err,user)=>{\r\n            if(user==undefined){\r\n             res.status(400).json({ message: 'User not Login!' },);\r\n         }else{\r\n                \r\n                //checking if page number is correct\r\n                let pageNumber=1\r\n        \r\n                if(!isNaN(req.params.page)){\r\n                   pageNumber=req.params.page;\r\n                 }\r\n                 //async query start here\r\n                 var countQuery = function(callback){\r\n                    Product.find({productName: new RegExp(req.params.search,\"i\")}, function(err, doc){\r\n                          if(err){ callback(err, null) }\r\n                          else{\r\n                              callback(null, doc.length);\r\n                           }\r\n                    }\r\n                    )};\r\n            \r\n               var retrieveQuery = function(callback){\r\n                   Product.find({productName: new RegExp(req.params.search,\"i\")}).skip((pageNumber-1)*12).limit(12).exec(function(err, doc){\r\n                    if(err){ callback(err, null) }\r\n                    else{\r\n                        callback(null, doc);\r\n                     }\r\n              });\r\n                   \r\n              };\r\n            \r\n               async.parallel([countQuery, retrieveQuery], function(err, results){\r\n                   if(err){\r\n                   // console.log(\"error here\");\r\n                    res.status(500).send(err);\r\n                   }else{\r\n                    res.status(200).json({total_pages:Math.floor(results[0]/12+1) , page: pageNumber, products: results[1]});\r\n                   }\r\n               });\r\n            \r\n         }\r\n                 });\r\n       });       \r\n\r\n\r\n        //assigning category\r\n        api.put('/assigncategory/:id', (req, res) => {\r\n            //check token\r\n              User.findOne({email:req.body.email},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not found!' });\r\n             }else{\r\n         Login.findOne({email:req.body.email},(err,login)=>{\r\n         \r\n             if(!err){\r\n         \r\n                 if(login==undefined){ //user not found\r\n         \r\n                     res.status(400).json({ message: 'User not Logged In!' });\r\n                 }else{\r\n         \r\n                    if(login.token==req.body.token && user.userType>0){  //token matching\r\n                        Product.findOne({_id:req.params.id},(err,product)=>{\r\n        \r\n                           \r\n                                if(!err){\r\n                                        if(product===undefined){\r\n        \r\n                                            res.status(400).send({message:\"no such product exsist\"});\r\n                                        }else{\r\n                                    \r\n                                          \r\n                                        product.category=req.body.category;\r\n                                         product.categoryName=req.body.name;\r\n                                            product.save((err)=>{\r\n        \r\n                                                if(!err){\r\n                                                    \r\n                                                                                                           \r\n                                                    \r\n                                                    res.status(200).send({message:\"category updated\"});\r\n                                                }else{\r\n        \r\n                                                    res.status(400).send({message:\"some problem occured\"});\r\n                                                }\r\n                                            \r\n                                            });\r\n        \r\n                                      \r\n                                            }\r\n        \r\n        \r\n                                }else{\r\n        \r\n                                    res.status(400).send(err);\r\n                                }\r\n        \r\n                            \r\n                        });\r\n                            \r\n                            \r\n         \r\n         \r\n                     }else{\r\n                         res.status(400).json({ message: 'invalid token!' });\r\n         \r\n                     }\r\n               \r\n                 }\r\n                \r\n             }else{\r\n         \r\n                     res.status(400).send(err);\r\n                 }\r\n           \r\n         });\r\n             }\r\n                     });\r\n           });\r\n\r\n            //assigning subcategory\r\n        api.put('/assignsubcategory/:id', (req, res) => {\r\n            //check token\r\n              User.findOne({email:req.body.email},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not found!' });\r\n             }else{\r\n         Login.findOne({email:req.body.email},(err,login)=>{\r\n         \r\n             if(!err){\r\n         \r\n                 if(login==undefined){ //user not found\r\n         \r\n                     res.status(400).json({ message: 'User not Logged In!' });\r\n                 }else{\r\n         \r\n                    if(login.token==req.body.token && user.userType>0){  //token matching\r\n                        Product.findOne({_id:req.params.id},(err,product)=>{\r\n        \r\n                           \r\n                                if(!err){\r\n                                        if(product===undefined){\r\n        \r\n                                            res.status(400).send({message:\"no such product exsist\"});\r\n                                        }else{\r\n                                    \r\n                                          \r\n                                        product.subcategory=req.body.subcategory;\r\n                                        product.subcategoryName=req.body.name;\r\n                                            product.save((err)=>{\r\n        \r\n                                                if(!err){\r\n                                                    \r\n                                                                                                           \r\n                                                    \r\n                                                    res.status(200).send({message:\"subcategory updated\"});\r\n                                                }else{\r\n        \r\n                                                    res.status(400).send({message:\"some problem occured\"});\r\n                                                }\r\n                                            \r\n                                            });\r\n        \r\n                                      \r\n                                            }\r\n        \r\n        \r\n                                }else{\r\n        \r\n                                    res.status(400).send(err);\r\n                                }\r\n        \r\n                            \r\n                        });\r\n                            \r\n                            \r\n         \r\n         \r\n                     }else{\r\n                         res.status(400).json({ message: 'invalid token!' });\r\n         \r\n                     }\r\n               \r\n                 }\r\n                \r\n             }else{\r\n         \r\n                     res.status(400).send(err);\r\n                 }\r\n           \r\n         });\r\n             }\r\n                     });\r\n           });\r\n\r\n            //approving link\r\n        api.put('/togglehold/:id', (req, res) => {\r\n            //check token\r\n              User.findOne({email:req.body.email},(err,user)=>{\r\n                if(user==undefined){\r\n                 res.status(400).json({ message: 'User not found!' });\r\n             }else{\r\n         Login.findOne({email:req.body.email},(err,login)=>{\r\n         \r\n             if(!err){\r\n         \r\n                 if(login==undefined){ //user not found\r\n         \r\n                     res.status(400).json({ message: 'User not Logged In!' });\r\n                 }else{\r\n         \r\n                    if(login.token==req.body.token && user.userType>0){  //token matching\r\n                        Product.findOne({_id:req.params.id},(err,product)=>{\r\n        \r\n                           \r\n                                if(!err){\r\n                                        if(product===undefined){\r\n        \r\n                                            res.status(400).send({message:\"no such product exsist\"});\r\n                                        }else{\r\n                                    \r\n                                          if(product.onHold==0){\r\n                                        product.onHold=1;\r\n                                          }else{\r\n                                            product.onHold=0;\r\n                                          }\r\n                                            product.save((err)=>{\r\n        \r\n                                                if(!err){\r\n        \r\n                                                    res.status(200).send({message:\"Hold toggeled\"});\r\n                                                }else{\r\n        \r\n                                                    res.status(400).send({message:\"some problem occured\"});\r\n                                                }\r\n                                            \r\n                                            });\r\n        \r\n                                      \r\n                                            }\r\n        \r\n        \r\n                                }else{\r\n        \r\n                                    res.status(400).send(err);\r\n                                }\r\n        \r\n                            \r\n                        });\r\n                            \r\n                            \r\n         \r\n         \r\n                     }else{\r\n                         res.status(400).json({ message: 'invalid token!' });\r\n         \r\n                     }\r\n               \r\n                 }\r\n                \r\n             }else{\r\n         \r\n                     res.status(400).send(err);\r\n                 }\r\n           \r\n         });\r\n             }\r\n                     });\r\n           });\r\n           \r\n  return api;\r\n}\r\n"]}