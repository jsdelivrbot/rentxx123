{"version":3,"sources":["../../src/controller/forgotpassword.js"],"names":["config","db","api","get","req","res","findOne","email","body","err","user","undefined","status","json","message","params","forgotpassword","newForgotpassword","save","send","post","key","password"],"mappings":"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","file":"forgotpassword.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport { Router } from 'express';\r\nimport Login from '../model/login';\r\nimport User from '../model/user';\r\nimport Forgotpassword from '../model/forgotpassword';\r\nimport bodyParser from 'body-parser';\r\nexport default({ config, db }) => {\r\n  let api = Router();\r\n\r\n//v1/forgotpassword/get\r\napi.get('/add/:email', (req, res) => {\r\n    //check password or match password token\r\n      User.findOne({email:req.body.email},(err,user)=>{\r\n        if(user==undefined){\r\n         res.status(400).json({ message: 'User not found!' });\r\n     }else{\r\n         Forgotpassword.findOne({email:req.params.email},(err,forgotpassword)=>{\r\n\r\n            if(!err){\r\n                if(forgotpassword==undefined){\r\n\r\n                    let newForgotpassword=new Forgotpassword();\r\n                    newForgotpassword.email=req.params.email;\r\n                    newForgotpassword.save((err)=>{\r\n\r\n                        if(!err){\r\n\r\n                            res.status(200).json({message:\"added!\"});\r\n                        }else{\r\n\r\n                            res.status(500).send(err);\r\n                        }\r\n\r\n                    });\r\n                }else{\r\n                    res.status(200).json({message:\"added!\"});\r\n\r\n                }\r\n\r\n            }else{\r\n\r\n                res.status(500).send(err);\r\n            }\r\n         });\r\n\r\n     }\r\n             });\r\n   });\r\n   //v1/forgotpassword/\r\napi.post('/change/:key/:email', (req, res) => {\r\n    //check password or match password token\r\n      User.findOne({email:req.params.email},(err,user)=>{\r\n        if(user==undefined){\r\n         res.status(400).json({ message: 'User not found!' });\r\n     }else{\r\n Forgotpassword.findOne({email:req.params.email},(err,forgotpassword)=>{\r\n \r\n     if(!err){\r\n \r\n         if(forgotpassword==undefined){ //user not found\r\n \r\n             res.status(400).json({ message: 'Create a key again' });\r\n         }else{\r\n \r\n             if(forgotpassword.key==req.params.key ){  //token matching and only admin can add\r\n                  //changing password here\r\n                  User.findOne({email:req.params.email},(err,user)=>{\r\n                    if(user===undefined){\r\n                        res.status(400).json({ message: 'User not found!' });\r\n                    }else{\r\n                        user.password=req.body.password;\r\n                        user.save((err)=>{\r\n\r\n\r\n                                if(!err){\r\n\r\n                                    res.status(200).json({message:\"password changed\"});\r\n                                }else{\r\n\r\n                                    res.status(500).send(err);\r\n                                }\r\n                        });\r\n                    }\r\n\r\n\r\n                  });\r\n \r\n \r\n             }else{\r\n                 res.status(400).json({ message: 'invalid token!' });\r\n \r\n             }\r\n       \r\n         }\r\n        \r\n     }else{\r\n \r\n             res.status(400).send(err);\r\n         }\r\n   \r\n });\r\n     }\r\n             });\r\n   });\r\n  return api;\r\n}\r\n"]}