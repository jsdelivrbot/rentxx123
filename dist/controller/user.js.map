{"version":3,"sources":["../../src/controller/user.js"],"names":["config","db","api","post","req","res","newUser","fname","body","lname","email","password","college","city","save","err","user","name","code","status","json","succes","message","send","transporter","createTransport","service","auth","pass","templateString","readFileSync","vaerificationAddress","myurl","emailverificationkey","console","log","join","__dirname","mailOptions","from","to","subject","html","render","heading","link","sendMail","info","put","findOne","params","delete","findById","id","undefined","login","token","userType","remove","changed","get","key","emailverified","find","sort","sortby","indexOf","pageNumber","isNaN","page","countQuery","callback","doc","length","retrieveQuery","skip","limit","exec","parallel","results","total_pages","Math","floor","users","query","$options"],"mappings":"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","file":"user.js","sourcesContent":["import mongoose from 'mongoose';\nimport nodemailer from 'nodemailer';\nimport ejs from 'ejs';\nimport path from 'path';\nimport fs from 'fs';\nimport async from 'async';\nimport { Router } from 'express';\nimport User from '../model/user';\nimport Login from '../model/login';\nimport bodyParser from 'body-parser';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/user/add'\n  api.post('/add', (req, res) => {\n    let newUser = new User();\n    newUser.fname = req.body.fname;\n    newUser.lname = req.body.lname;\n    newUser.email = req.body.email;\n    newUser.password=req.body.password;\n    newUser.college=req.body.college;\n    newUser.city=req.body.city;\n    newUser.save(function(err,user) {\n      if (err) {\n        if (err.name === 'MongoError' && err.code === 11000) {\n          // Duplicate email\n          return res.status(200).json({ succes: false, message: 'User already exist!' });\n        }\n  \n        // Some other error\n        return res.status(500).send(err);\n      }\n      //sending mail \nvar transporter = nodemailer.createTransport({\n  service: 'Gmail',\n  auth: {\n    user: 'toshikverma1@gmail.com', // Your email id\n    pass: '123123123a' // Your password\n  }\n});\nvar templateString = fs.readFileSync('views/verify.ejs', 'utf-8');\nlet vaerificationAddress=config.myurl+\"user/verify/\"+user.emailverificationkey+\"/\"+user.email\nconsole.log(path.join(__dirname,'/views/welcome.ejs'));\nvar mailOptions = {\n  from: 'toshikverma@gmail.com', // sender address\n  to: user.email, // list of receivers\n  subject: 'Verification Email', // Subject line\n  html: ejs.render(templateString,{heading:\"Verification Email\",name:user.fname,link:vaerificationAddress},(err)=>{\n    if(err){\n      console.log(err);\n    }\n  }) \n  // html: ejs.renderFile(path.join(__dirname,'/views/welcome.ejs'),{heading:\"Verification Email\",body:\"test body\"}) //, // plaintext body\n  // html: '<b>Hello world ✔</b>' // You can choose to send an HTML body instead\n};\ntransporter.sendMail(mailOptions, function (err, info) {\n  if(err)\n    console.log(err)\n   \n  else\n    console.log(info);\n});\n//sending mail ends\n      res.json({succes: true, message: 'User saved successfully' });\n    });\n  });\n  \n       //updating user\n       api.put('/update/:email',(req,res)=>{\n        User.findOne({email: req.params.email}, function(err, user) {\n          if(!err) {\n            if(user===null){\n              res.json({ message: 'User not found!' });\n  \n            }else{\n              user.fname=req.body.fname;\n              user.lname=req.body.lname;\n              user.save(function(err,user) {\n                  if(err){\n\n                    res.send(err);\n                  }\n                  res.json({ message: 'User updated successfully' });\n                  \n              });\n            }\n          }else{\n\n            res.send(err);\n          }\n      });\n    });\n    //deleting a user\n   api.delete('/delete/:id',(req,res)=>{\n    //check password or match password\n    User.findById((req.params.id),(err,user)=>{\n      if(user==undefined){\n       res.status(400).json({ message: 'User not found!' });\n   }else{\nLogin.findOne({email:req.body.email},(err,login)=>{\n\n   if(!err){\n\n       if(login==undefined){ //user not found\n\n           res.status(400).json({ message: 'User not Logged In!' });\n       }else{\n\n           if(login.token==req.body.token && login.userType==3){  //token matching\n           \n            user.remove((err)=>{\n\n              if(err){\n                res.status(500).send(err);\n              }else{\n\n\n                res.status(200).json({message:\"user removed!\"});\n              }\n            });\n           }else{\n\n            res.status(400).send({message:\"you are not authorized for moderation!\"});\n           }\n          }\n        }else{\n\n          res.status(500).send(err);\n        }\n          });\n        }\n  });\n});\n    //promoting as moderator\n    api.put('/promote/:id',(req,res)=>{\n      //check password or match password\n      User.findById((req.params.id),(err,user)=>{\n        if(user==undefined){\n         res.status(400).json({ message: 'User not found!' });\n     }else{\n Login.findOne({email:req.body.email},(err,login)=>{\n \n     if(!err){\n \n         if(login==undefined){ //user not found\n \n             res.status(400).json({ message: 'User not Logged In!' });\n         }else{\n \n             if(login.token==req.body.token && login.userType==3){  //token matching\n              user.userType=2;\n              user.save((err,changed)=>{\n\n                if(err){\n                  res.status(500).send(err);\n                }else{\n\n\n                  res.status(200).json(changed);\n                }\n              });\n             }else{\n\n              res.status(400).send({message:\"you are not authorized for moderation!\"});\n             }\n            }\n          }else{\n\n            res.status(500).send(err);\n          }\n            });\n          }\n    });\n  });\n   //demoting as moderator\n   api.put('/demote/:id',(req,res)=>{\n    //check password or match password\n    User.findById((req.params.id),(err,user)=>{\n      if(user==undefined){\n       res.status(400).json({ message: 'User not found!' });\n   }else{\nLogin.findOne({email:req.body.email},(err,login)=>{\n\n   if(!err){\n\n       if(login==undefined){ //user not found\n\n           res.status(400).json({ message: 'User not Logged In!' });\n       }else{\n\n           if(login.token==req.body.token && login.userType==3){  //token matching\n            user.userType=0;\n            user.save((err,changed)=>{\n\n              if(err){\n                res.status(500).send(err);\n              }else{\n\n\n                res.status(200).json(changed);\n              }\n            });\n           }else{\n\n            res.status(400).send({message:\"you are not authorized for moderation!\"});\n           }\n          }\n        }else{\n\n          res.status(500).send(err);\n        }\n          });\n        }\n  });\n});\n //updating user\n api.get('/verify/:key/:email',(req,res)=>{\n  User.findOne({email: req.params.email}, function(err, user) {\n    if(!err) {\n      if(user===null){\n        res.status(400).json({ message: 'User not found!' });\n\n      }else{\n       if(user.emailverificationkey===req.params.key){\n          user.emailverified=1;\n          user.save((err)=>{\n            if(!err){\n //sending mail \n var transporter = nodemailer.createTransport({\n  service: 'Gmail',\n  auth: {\n      user: 'toshikverma1@gmail.com', // Your email id\n      pass: '123123123a' // Your password\n  }\n});\nvar templateString = fs.readFileSync('views/welcome.ejs', 'utf-8');\nvar mailOptions = {\n  from: 'toshikverma@gmail.com', // sender address\n  to: user.email, // list of receivers\n  subject: 'Email Verified!', // Subject line\n  html: ejs.render(templateString,{heading:\"Welcome Email verified!\",name:user.fname},(err)=>{\n    if(err){\n      console.log(err);\n    }\n  }) \n  // html: ejs.renderFile(path.join(__dirname,'/views/welcome.ejs'),{heading:\"Verification Email\",body:\"test body\"}) //, // plaintext body\n  // html: '<b>Hello world ✔</b>' // You can choose to send an HTML body instead\n};\ntransporter.sendMail(mailOptions, function (err, info) {\n  if(err)\n    console.log(err)\n\n  else\n    console.log(info);\n});\n//sending mail ends\n              res.status(200).json({message:\"user verified!\"});\n            }else{\n\n              res.status(500).send(err);\n            }\n\n          });\n\n       }else{\n        res.status(400).json({ message: 'invalid verification key' });\n\n       }\n      }\n    }else{\n\n      res.send(err);\n    }\n});\n});\n//we are getting user details\n api.post('/get',(req,res)=>{\n      //check password or match password\n      User.find({email:req.body.email},(err,user)=>{\n        if(user==undefined){\n         res.status(400).json({ message: 'User not found!' });\n     }else{\n Login.findOne({email:req.body.email},(err,login)=>{\n \n     if(!err){\n \n         if(login==undefined){ //user not found\n \n             res.status(400).json({ message: 'User not Logged In!' });\n         }else{\n \n             if(login.token==req.body.token && login.userType==3){  //token matching\n            let sort=[\"date\",\"fname\"];\n                    let sortby=\"date\";\n                    if(sort.indexOf(req.params.sortby) > -1){\n\n                        sortby=req.params.sortby;\n                    }\n                    //checking if page number is correct\n                    let pageNumber=1\n            \n                    if(!isNaN(req.body.page)){\n                       pageNumber=req.body.page;\n                     }\n                     //async query start here\n                     console.log(\"query started\");\n                     var countQuery = function(callback){\n                        User.find({}, function(err, doc){\n                              if(err){ callback(err, null) }\n                              else{\n                                  callback(null, doc.length);\n                               }\n                        }\n                        )};\n                \n                   var retrieveQuery = function(callback){\n                       console.log((pageNumber-1)*12);\n                       User.find({}).skip((pageNumber-1)*12).sort({sortby: -1}).limit(12).exec(function(err, doc){\n                        if(err){ callback(err, null) }\n                        else{\n                            callback(null, doc);\n                         }\n                  });\n                       \n                  };\n                \n                console.log(retrieveQuery);\n                   async.parallel([countQuery, retrieveQuery], function(err, results){\n                        //err contains the array of error of all the functions\n                        //results contains an array of all the results\n                        //results[0] will contain value of doc.length from countQuery function\n                        //results[1] will contain doc of retrieveQuery function\n                        //You can send the results as\n                       if(err){\n                       // console.log(\"error here\");\n                        res.status(500).send(err);\n                       }else{\n                        res.status(200).json({total_pages:Math.floor(results[0]/12+1) , page: pageNumber, users: results[1]});\n                       }\n                   });\n             }else{\n\n              res.status(400).send({message:\"you are not authorized for moderation!\"});\n             }\n            }\n          }else{\n\n            res.status(500).send(err);\n          }\n            });\n          }\n    });\n  });\n\n  //we are getting user details\n api.post('/search',(req,res)=>{\n      //check password or match password\n      User.find({email:req.body.email},(err,user)=>{\n        if(user==undefined){\n         res.status(400).json({ message: 'User not found!' });\n     }else{\n Login.findOne({email:req.body.email},(err,login)=>{\n \n     if(!err){\n \n         if(login==undefined){ //user not found\n \n             res.status(400).json({ message: 'User not Logged In!' });\n         }else{\n \n             if(login.token==req.body.token && login.userType==3){  //token matching\n            let sort=[\"date\",\"fname\"];\n                    let sortby=\"date\";\n                    if(sort.indexOf(req.params.sortby) > -1){\n\n                        sortby=req.params.sortby;\n                    }\n                    //checking if page number is correct\n                    let pageNumber=1\n            \n                    if(!isNaN(req.body.page)){\n                       pageNumber=req.body.page;\n                     }\n                     //async query start here\n                     console.log(\"query started\");\n                     var countQuery = function(callback){\n                        User.find({'email' : {'$regex' : '.*' + req.body.query + '.*', $options: 'i' } }, function(err, doc){\n                              if(err){ callback(err, null) }\n                              else{\n                                  callback(null, doc.length);\n                               }\n                        }\n                        )};\n                \n                   var retrieveQuery = function(callback){\n                       console.log((pageNumber-1)*12);\n                       User.find({'email' : {'$regex' : '.*' + req.body.query + '.*', $options: 'i' }}).skip((pageNumber-1)*12).sort({sortby: -1}).limit(12).exec(function(err, doc){\n                        if(err){ callback(err, null) }\n                        else{\n                            callback(null, doc);\n                         }\n                  });\n                       \n                  };\n                \n                console.log(retrieveQuery);\n                   async.parallel([countQuery, retrieveQuery], function(err, results){\n                        //err contains the array of error of all the functions\n                        //results contains an array of all the results\n                        //results[0] will contain value of doc.length from countQuery function\n                        //results[1] will contain doc of retrieveQuery function\n                        //You can send the results as\n                       if(err){\n                       // console.log(\"error here\");\n                        res.status(500).send(err);\n                       }else{\n                        res.status(200).json({total_pages:Math.floor(results[0]/12+1) , page: pageNumber, users: results[1]});\n                       }\n                   });\n             }else{\n\n              res.status(400).send({message:\"you are not authorized for moderation!\"});\n             }\n            }\n          }else{\n\n            res.status(500).send(err);\n          }\n            });\n          }\n    });\n  });\n  return api;\n}\n"]}